// Generated by psc-bundle 0.7.6.1
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Monoid ---------------------------------------------------------------------

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };

  //- Ord ------------------------------------------------------------------------

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };                                          

  //- BooleanAlgebra -------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    /* jshint bitwise: false */
    return n === (n | 0) ? n + ".0" : n.toString();
  };

  exports.showCharImpl = function (c) {
    return c === "'" ? "'\\''" : "'" + c + "'";
  };

  exports.showStringImpl = function (s) {
    return JSON.stringify(s);
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Prelude"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Ord = function (__superclass_Prelude$dotEq_0, compare) {
      this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
      this.compare = compare;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var Show = function (show) {
      this.show = show;
  };
  var zero = function (dict) {
      return dict.zero;
  };
  var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
  var unit = {};
  var top = function (dict) {
      return dict.top;
  }; 
  var showString = new Show($foreign.showStringImpl);
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);
  var showChar = new Show($foreign.showCharImpl);
  var showBoolean = new Show(function (_35) {
      if (_35) {
          return "true";
      };
      if (!_35) {
          return "false";
      };
      throw new Error("Failed pattern match at Prelude line 841, column 1 - line 845, column 1: " + [ _35.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (__dict_Show_1) {
      return new Show($foreign.showArrayImpl(show(__dict_Show_1)));
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var otherwise = true;
  var one = function (dict) {
      return dict.one;
  };
  var not = function (dict) {
      return dict.not;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var ordString = new Ord(function () {
      return eqString;
  }, unsafeCompare);
  var eqInt = new Eq($foreign.refEq);
  var eqChar = new Eq($foreign.refEq);
  var ordChar = new Ord(function () {
      return eqChar;
  }, unsafeCompare);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var eqArray = function (__dict_Eq_8) {
      return new Eq($foreign.eqArrayImpl($eq$eq(__dict_Eq_8)));
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $$const = function (a) {
      return function (_3) {
          return a;
      };
  };
  var $$void = function (__dict_Functor_12) {
      return function (fa) {
          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var $less = function (__dict_Ord_17) {
      return function (a1) {
          return function (a2) {
              var _47 = compare(__dict_Ord_17)(a1)(a2);
              if (_47 instanceof LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var $less$eq = function (__dict_Ord_18) {
      return function (a1) {
          return function (a2) {
              var _48 = compare(__dict_Ord_18)(a1)(a2);
              if (_48 instanceof GT) {
                  return false;
              };
              return true;
          };
      };
  };
  var $greater$eq = function (__dict_Ord_20) {
      return function (a1) {
          return function (a2) {
              var _50 = compare(__dict_Ord_20)(a1)(a2);
              if (_50 instanceof LT) {
                  return false;
              };
              return true;
          };
      };
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var bind = function (dict) {
      return dict.bind;
  };
  var $greater$greater$eq = function (__dict_Bind_24) {
      return bind(__dict_Bind_24);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (__dict_Semigroup_27) {
      return append(__dict_Semigroup_27);
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_2(_1));
                  });
              });
          };
      };
  }; 
  var add = function (dict) {
      return dict.add;
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["Show"] = Show;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Ord"] = Ord;
  exports["Eq"] = Eq;
  exports["Semiring"] = Semiring;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["unsafeCompare"] = unsafeCompare;
  exports[">="] = $greater$eq;
  exports["<="] = $less$eq;
  exports["<"] = $less;
  exports["compare"] = compare;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["one"] = one;
  exports["mul"] = mul;
  exports["zero"] = zero;
  exports["add"] = add;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["boundedBoolean"] = boundedBoolean;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showChar"] = showChar;
  exports["showString"] = showString;
  exports["showArray"] = showArray;;
 
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.alt = alt;
  };                                         
  var alt = function (dict) {
      return dict.alt;
  };
  var $less$bar$greater = function (__dict_Alt_0) {
      return alt(__dict_Alt_0);
  };
  exports["Alt"] = Alt;
  exports["<|>"] = $less$bar$greater;
  exports["alt"] = alt;;
 
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var $less$times = function (__dict_Apply_0) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_0)(Prelude["<$>"](__dict_Apply_0["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
          };
      };
  };
  var $times$greater = function (__dict_Apply_1) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;
  exports["<*"] = $less$times;;
 
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Extend = function (__superclass_Prelude$dotFunctor_0, extend) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.extend = extend;
  };
  var extend = function (dict) {
      return dict.extend;
  };
  exports["Extend"] = Extend;
  exports["extend"] = extend;;
 
})(PS["Control.Extend"] = PS["Control.Extend"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var when = function (__dict_Monad_0) {
      return function (_0) {
          return function (m) {
              if (_0) {
                  return m;
              };
              if (!_0) {
                  return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
              };
              throw new Error("Failed pattern match at Control.Monad line 8, column 1 - line 9, column 1: " + [ _0.constructor.name, m.constructor.name ]);
          };
      };
  };
  exports["when"] = when;;
 
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];     
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;
 
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };               
  var monoidString = new Monoid(function () {
      return Prelude.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;;
 
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (__dict_BooleanAlgebra_2) {
      return new Prelude.Semigroup(function (_10) {
          return function (_11) {
              return Prelude.disj(__dict_BooleanAlgebra_2)(_10)(_11);
          };
      });
  };
  var runDisj = function (_0) {
      return _0;
  };
  var monoidDisj = function (__dict_BooleanAlgebra_4) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(__dict_BooleanAlgebra_4);
      }, Prelude.bottom(__dict_BooleanAlgebra_4["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;;
 
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];     
  var Bifoldable = function (bifoldMap, bifoldl, bifoldr) {
      this.bifoldMap = bifoldMap;
      this.bifoldl = bifoldl;
      this.bifoldr = bifoldr;
  };
  var bifoldr = function (dict) {
      return dict.bifoldr;
  };
  var bifoldl = function (dict) {
      return dict.bifoldl;
  };
  var bifoldMap = function (dict) {
      return dict.bifoldMap;
  };
  exports["Bifoldable"] = Bifoldable;
  exports["bifoldMap"] = bifoldMap;
  exports["bifoldl"] = bifoldl;
  exports["bifoldr"] = bifoldr;;
 
})(PS["Data.Bifoldable"] = PS["Data.Bifoldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  exports["Bifunctor"] = Bifunctor;
  exports["bimap"] = bimap;;
 
})(PS["Data.Bifunctor"] = PS["Data.Bifunctor"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];     
  var Bitraversable = function (__superclass_Data$dotBifoldable$dotBifoldable_1, __superclass_Data$dotBifunctor$dotBifunctor_0, bisequence, bitraverse) {
      this["__superclass_Data.Bifoldable.Bifoldable_1"] = __superclass_Data$dotBifoldable$dotBifoldable_1;
      this["__superclass_Data.Bifunctor.Bifunctor_0"] = __superclass_Data$dotBifunctor$dotBifunctor_0;
      this.bisequence = bisequence;
      this.bitraverse = bitraverse;
  };
  var bitraverse = function (dict) {
      return dict.bitraverse;
  };
  var bisequence = function (dict) {
      return dict.bisequence;
  };
  exports["Bitraversable"] = Bitraversable;
  exports["bisequence"] = bisequence;
  exports["bitraverse"] = bitraverse;;
 
})(PS["Data.Bitraversable"] = PS["Data.Bitraversable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];     
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (__dict_Show_0) {
      return new Prelude.Show(function (_13) {
          if (_13 instanceof Just) {
              return "Just (" + (Prelude.show(__dict_Show_0)(_13.value0) + ")");
          };
          if (_13 instanceof Nothing) {
              return "Nothing";
          };
          throw new Error("Failed pattern match at Data.Maybe line 289, column 1 - line 291, column 19: " + [ _13.constructor.name ]);
      });
  };
  var maybe = function (b) {
      return function (f) {
          return function (_0) {
              if (_0 instanceof Nothing) {
                  return b;
              };
              if (_0 instanceof Just) {
                  return f(_0.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 26, column 1 - line 27, column 1: " + [ b.constructor.name, f.constructor.name, _0.constructor.name ]);
          };
      };
  };                                                   
  var isJust = maybe(false)(Prelude["const"](true));
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_2) {
          if (_2 instanceof Just) {
              return new Just(fn(_2.value0));
          };
          return Nothing.value;
      };
  });
  var eqMaybe = function (__dict_Eq_8) {
      return new Prelude.Eq(function (_9) {
          return function (_10) {
              if (_9 instanceof Nothing && _10 instanceof Nothing) {
                  return true;
              };
              if (_9 instanceof Just && _10 instanceof Just) {
                  return Prelude["=="](__dict_Eq_8)(_9.value0)(_10.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (_3) {
      return function (x) {
          if (_3 instanceof Just) {
              return Prelude["<$>"](functorMaybe)(_3.value0)(x);
          };
          if (_3 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ _3.constructor.name, x.constructor.name ]);
      };
  });
  var bindMaybe = new Prelude.Bind(function () {
      return applyMaybe;
  }, function (_5) {
      return function (k) {
          if (_5 instanceof Just) {
              return k(_5.value0);
          };
          if (_5 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ _5.constructor.name, k.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["isJust"] = isJust;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["showMaybe"] = showMaybe;;
 
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];     
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  }; 
  var foldMapDefaultR = function (__dict_Foldable_26) {
      return function (__dict_Monoid_27) {
          return function (f) {
              return function (xs) {
                  return foldr(__dict_Foldable_26)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](__dict_Monoid_27["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(__dict_Monoid_27))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (__dict_Monoid_28) {
      return foldMapDefaultR(foldableArray)(__dict_Monoid_28);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (__dict_Foldable_38) {
      return function (__dict_BooleanAlgebra_39) {
          return function (p) {
              return function (_112) {
                  return Data_Monoid_Disj.runDisj(foldMap(__dict_Foldable_38)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_39))(function (_113) {
                      return Data_Monoid_Disj.Disj(p(_113));
                  })(_112));
              };
          };
      };
  };
  var elem = function (__dict_Foldable_40) {
      return function (__dict_Eq_41) {
          return function (_114) {
              return any(__dict_Foldable_40)(Prelude.booleanAlgebraBoolean)(Prelude["=="](__dict_Eq_41)(_114));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["elem"] = elem;
  exports["any"] = any;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;;
 
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (__dict_Traversable_12) {
      return function (__dict_Applicative_13) {
          return function (tma) {
              return traverse(__dict_Traversable_12)(__dict_Applicative_13)(Prelude.id(Prelude.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (__dict_Applicative_15) {
      return sequenceDefault(traversableArray)(__dict_Applicative_15);
  }, function (__dict_Applicative_14) {
      return $foreign.traverseArrayImpl(Prelude.apply(__dict_Applicative_14["__superclass_Prelude.Apply_0"]()))(Prelude.map((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(__dict_Applicative_14));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["sequenceDefault"] = sequenceDefault;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;;
 
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  exports["Tuple"] = Tuple;;
 
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var showEither = function (__dict_Show_2) {
      return function (__dict_Show_3) {
          return new Prelude.Show(function (_7) {
              if (_7 instanceof Left) {
                  return "Left (" + (Prelude.show(__dict_Show_2)(_7.value0) + ")");
              };
              if (_7 instanceof Right) {
                  return "Right (" + (Prelude.show(__dict_Show_3)(_7.value0) + ")");
              };
              throw new Error("Failed pattern match at Data.Either line 174, column 1 - line 181, column 1: " + [ _7.constructor.name ]);
          });
      };
  };
  var functorEither = new Prelude.Functor(function (f) {
      return function (_2) {
          if (_2 instanceof Left) {
              return new Left(_2.value0);
          };
          if (_2 instanceof Right) {
              return new Right(f(_2.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 52, column 1 - line 56, column 1: " + [ f.constructor.name, _2.constructor.name ]);
      };
  });
  var foldableEither = new Data_Foldable.Foldable(function (__dict_Monoid_8) {
      return function (f) {
          return function (_14) {
              if (_14 instanceof Left) {
                  return Data_Monoid.mempty(__dict_Monoid_8);
              };
              if (_14 instanceof Right) {
                  return f(_14.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ f.constructor.name, _14.constructor.name ]);
          };
      };
  }, function (f) {
      return function (z) {
          return function (_13) {
              if (_13 instanceof Left) {
                  return z;
              };
              if (_13 instanceof Right) {
                  return f(z)(_13.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _13.constructor.name ]);
          };
      };
  }, function (f) {
      return function (z) {
          return function (_12) {
              if (_12 instanceof Left) {
                  return z;
              };
              if (_12 instanceof Right) {
                  return f(_12.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Either line 201, column 1 - line 209, column 1: " + [ f.constructor.name, z.constructor.name, _12.constructor.name ]);
          };
      };
  });
  var traversableEither = new Data_Traversable.Traversable(function () {
      return foldableEither;
  }, function () {
      return functorEither;
  }, function (__dict_Applicative_1) {
      return function (_19) {
          if (_19 instanceof Left) {
              return Prelude.pure(__dict_Applicative_1)(new Left(_19.value0));
          };
          if (_19 instanceof Right) {
              return Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_19.value0);
          };
          throw new Error("Failed pattern match at Data.Either line 217, column 1 - line 223, column 1: " + [ _19.constructor.name ]);
      };
  }, function (__dict_Applicative_0) {
      return function (f) {
          return function (_18) {
              if (_18 instanceof Left) {
                  return Prelude.pure(__dict_Applicative_0)(new Left(_18.value0));
              };
              if (_18 instanceof Right) {
                  return Prelude["<$>"]((__dict_Applicative_0["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(f(_18.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 217, column 1 - line 223, column 1: " + [ f.constructor.name, _18.constructor.name ]);
          };
      };
  });
  var extendEither = new Control_Extend.Extend(function () {
      return functorEither;
  }, function (f) {
      return function (_6) {
          if (_6 instanceof Left) {
              return new Left(_6.value0);
          };
          return new Right(f(_6));
      };
  });
  var eqEither = function (__dict_Eq_9) {
      return function (__dict_Eq_10) {
          return new Prelude.Eq(function (_8) {
              return function (_9) {
                  if (_8 instanceof Left && _9 instanceof Left) {
                      return Prelude["=="](__dict_Eq_9)(_8.value0)(_9.value0);
                  };
                  if (_8 instanceof Right && _9 instanceof Right) {
                      return Prelude["=="](__dict_Eq_10)(_8.value0)(_9.value0);
                  };
                  return false;
              };
          });
      };
  };
  var ordEither = function (__dict_Ord_6) {
      return function (__dict_Ord_7) {
          return new Prelude.Ord(function () {
              return eqEither(__dict_Ord_6["__superclass_Prelude.Eq_0"]())(__dict_Ord_7["__superclass_Prelude.Eq_0"]());
          }, function (_10) {
              return function (_11) {
                  if (_10 instanceof Left && _11 instanceof Left) {
                      return Prelude.compare(__dict_Ord_6)(_10.value0)(_11.value0);
                  };
                  if (_10 instanceof Right && _11 instanceof Right) {
                      return Prelude.compare(__dict_Ord_7)(_10.value0)(_11.value0);
                  };
                  if (_10 instanceof Left) {
                      return Prelude.LT.value;
                  };
                  if (_11 instanceof Left) {
                      return Prelude.GT.value;
                  };
                  throw new Error("Failed pattern match at Data.Either line 191, column 1 - line 197, column 1: " + [ _10.constructor.name, _11.constructor.name ]);
              };
          });
      };
  };
  var either = function (f) {
      return function (g) {
          return function (_1) {
              if (_1 instanceof Left) {
                  return f(_1.value0);
              };
              if (_1 instanceof Right) {
                  return g(_1.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 28, column 1 - line 29, column 1: " + [ f.constructor.name, g.constructor.name, _1.constructor.name ]);
          };
      };
  };
  var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
  var isRight = either(Prelude["const"](false))(Prelude["const"](true));
  var boundedEither = function (__dict_Bounded_11) {
      return function (__dict_Bounded_12) {
          return new Prelude.Bounded(new Left(Prelude.bottom(__dict_Bounded_11)), new Right(Prelude.top(__dict_Bounded_12)));
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (_3) {
              if (_3 instanceof Left) {
                  return new Left(f(_3.value0));
              };
              if (_3 instanceof Right) {
                  return new Right(g(_3.value0));
              };
              throw new Error("Failed pattern match at Data.Either line 56, column 1 - line 92, column 1: " + [ f.constructor.name, g.constructor.name, _3.constructor.name ]);
          };
      };
  });
  var bifoldableEither = new Data_Bifoldable.Bifoldable(function (__dict_Monoid_15) {
      return function (f) {
          return function (g) {
              return function (_17) {
                  if (_17 instanceof Left) {
                      return f(_17.value0);
                  };
                  if (_17 instanceof Right) {
                      return g(_17.value0);
                  };
                  throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, _17.constructor.name ]);
              };
          };
      };
  }, function (f) {
      return function (g) {
          return function (z) {
              return function (_16) {
                  if (_16 instanceof Left) {
                      return f(z)(_16.value0);
                  };
                  if (_16 instanceof Right) {
                      return g(z)(_16.value0);
                  };
                  throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _16.constructor.name ]);
              };
          };
      };
  }, function (f) {
      return function (g) {
          return function (z) {
              return function (_15) {
                  if (_15 instanceof Left) {
                      return f(_15.value0)(z);
                  };
                  if (_15 instanceof Right) {
                      return g(_15.value0)(z);
                  };
                  throw new Error("Failed pattern match at Data.Either line 209, column 1 - line 217, column 1: " + [ f.constructor.name, g.constructor.name, z.constructor.name, _15.constructor.name ]);
              };
          };
      };
  });
  var bitraversableEither = new Data_Bitraversable.Bitraversable(function () {
      return bifoldableEither;
  }, function () {
      return bifunctorEither;
  }, function (__dict_Applicative_14) {
      return function (_21) {
          if (_21 instanceof Left) {
              return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(_21.value0);
          };
          if (_21 instanceof Right) {
              return Prelude["<$>"]((__dict_Applicative_14["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(_21.value0);
          };
          throw new Error("Failed pattern match at Data.Either line 223, column 1 - line 229, column 1: " + [ _21.constructor.name ]);
      };
  }, function (__dict_Applicative_13) {
      return function (f) {
          return function (g) {
              return function (_20) {
                  if (_20 instanceof Left) {
                      return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Left.create)(f(_20.value0));
                  };
                  if (_20 instanceof Right) {
                      return Prelude["<$>"]((__dict_Applicative_13["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Right.create)(g(_20.value0));
                  };
                  throw new Error("Failed pattern match at Data.Either line 223, column 1 - line 229, column 1: " + [ f.constructor.name, g.constructor.name, _20.constructor.name ]);
              };
          };
      };
  });
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (_4) {
      return function (r) {
          if (_4 instanceof Left) {
              return new Left(_4.value0);
          };
          if (_4 instanceof Right) {
              return Prelude["<$>"](functorEither)(_4.value0)(r);
          };
          throw new Error("Failed pattern match at Data.Either line 92, column 1 - line 116, column 1: " + [ _4.constructor.name, r.constructor.name ]);
      };
  });
  var bindEither = new Prelude.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (_0) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var semigroupEither = function (__dict_Semigroup_5) {
      return new Prelude.Semigroup(function (x) {
          return function (y) {
              return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.append(__dict_Semigroup_5))(x))(y);
          };
      });
  };
  var semiringEither = function (__dict_Semiring_4) {
      return new Prelude.Semiring(function (x) {
          return function (y) {
              return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.add(__dict_Semiring_4))(x))(y);
          };
      }, function (x) {
          return function (y) {
              return Prelude["<*>"](applyEither)(Prelude["<$>"](functorEither)(Prelude.mul(__dict_Semiring_4))(x))(y);
          };
      }, new Right(Prelude.one(__dict_Semiring_4)), new Right(Prelude.zero(__dict_Semiring_4)));
  };
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  var monadEither = new Prelude.Monad(function () {
      return applicativeEither;
  }, function () {
      return bindEither;
  });
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (_5) {
      return function (r) {
          if (_5 instanceof Left) {
              return r;
          };
          return _5;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["isRight"] = isRight;
  exports["isLeft"] = isLeft;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
  exports["monadEither"] = monadEither;
  exports["extendEither"] = extendEither;
  exports["showEither"] = showEither;
  exports["eqEither"] = eqEither;
  exports["ordEither"] = ordEither;
  exports["boundedEither"] = boundedEither;
  exports["foldableEither"] = foldableEither;
  exports["bifoldableEither"] = bifoldableEither;
  exports["traversableEither"] = traversableEither;
  exports["bitraversableEither"] = bitraversableEither;
  exports["semiringEither"] = semiringEither;
  exports["semigroupEither"] = semigroupEither;;
 
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var MonadReader = function (__superclass_Prelude$dotMonad_0, ask, local) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.ask = ask;
      this.local = local;
  };                                                                         
  var local = function (dict) {
      return dict.local;
  };
  var ask = function (dict) {
      return dict.ask;
  };
  exports["MonadReader"] = MonadReader;
  exports["local"] = local;
  exports["ask"] = ask;;
 
})(PS["Control.Monad.Reader.Class"] = PS["Control.Monad.Reader.Class"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];     
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["MonadTrans"] = MonadTrans;
  exports["lift"] = lift;;
 
})(PS["Control.Monad.Trans"] = PS["Control.Monad.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_RWS_Class = PS["Control.Monad.RWS.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];     
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (_6) {
      return _6;
  }; 
  var mapExceptT = function (f) {
      return function (m) {
          return f(runExceptT(m));
      };
  };
  var functorExceptT = function (__dict_Functor_16) {
      return new Prelude.Functor(function (f) {
          return mapExceptT(Prelude["<$>"](__dict_Functor_16)(Prelude["<$>"](Data_Either.functorEither)(f)));
      });
  };
  var applyExceptT = function (__dict_Apply_18) {
      return new Prelude.Apply(function () {
          return functorExceptT(__dict_Apply_18["__superclass_Prelude.Functor_0"]());
      }, function (_8) {
          return function (_9) {
              var f$prime = Prelude["<$>"](__dict_Apply_18["__superclass_Prelude.Functor_0"]())(Prelude["<*>"](Data_Either.applyEither))(_8);
              var x$prime = Prelude["<*>"](__dict_Apply_18)(f$prime)(_9);
              return x$prime;
          };
      });
  };
  var bindExceptT = function (__dict_Monad_17) {
      return new Prelude.Bind(function () {
          return applyExceptT((__dict_Monad_17["__superclass_Prelude.Bind_1"]())["__superclass_Prelude.Apply_0"]());
      }, function (m) {
          return function (k) {
              return Prelude[">>="](__dict_Monad_17["__superclass_Prelude.Bind_1"]())(runExceptT(m))(Data_Either.either(function (_43) {
                  return Prelude["return"](__dict_Monad_17["__superclass_Prelude.Applicative_0"]())(Data_Either.Left.create(_43));
              })(function (_44) {
                  return runExceptT(k(_44));
              }));
          };
      });
  };
  var applicativeExceptT = function (__dict_Applicative_19) {
      return new Prelude.Applicative(function () {
          return applyExceptT(__dict_Applicative_19["__superclass_Prelude.Apply_0"]());
      }, function (_45) {
          return ExceptT(Prelude.pure(__dict_Applicative_19)(Data_Either.Right.create(_45)));
      });
  };
  var monadExceptT = function (__dict_Monad_10) {
      return new Prelude.Monad(function () {
          return applicativeExceptT(__dict_Monad_10["__superclass_Prelude.Applicative_0"]());
      }, function () {
          return bindExceptT(__dict_Monad_10);
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["runExceptT"] = runExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;;
 
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];     
  var Identity = function (x) {
      return x;
  };
  var runIdentity = function (_0) {
      return _0;
  };
  var functorIdentity = new Prelude.Functor(function (f) {
      return function (_23) {
          return f(_23);
      };
  });
  var applyIdentity = new Prelude.Apply(function () {
      return functorIdentity;
  }, function (_24) {
      return function (_25) {
          return _24(_25);
      };
  });
  var bindIdentity = new Prelude.Bind(function () {
      return applyIdentity;
  }, function (_26) {
      return function (f) {
          return f(_26);
      };
  });
  var applicativeIdentity = new Prelude.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Prelude.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["runIdentity"] = runIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;;
 
})(PS["Data.Identity"] = PS["Data.Identity"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Data_Either = PS["Data.Either"];
  var Data_Identity = PS["Data.Identity"];                                               
  var runExcept = function (_0) {
      return Data_Identity.runIdentity(Control_Monad_Except_Trans.runExceptT(_0));
  };
  var except = function (_2) {
      return Control_Monad_Except_Trans.ExceptT(Data_Identity.Identity(_2));
  };
  exports["runExcept"] = runExcept;
  exports["except"] = except;;
 
})(PS["Control.Monad.Except"] = PS["Control.Monad.Except"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Distributive = PS["Data.Distributive"];
  var Data_Either = PS["Data.Either"];     
  var ReaderT = function (x) {
      return x;
  };
  var runReaderT = function (_2) {
      return _2;
  };
  var withReaderT = function (f) {
      return function (m) {
          return ReaderT(function (_6) {
              return runReaderT(m)(f(_6));
          });
      };
  };
  var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_1) {
      return function (_7) {
          return ReaderT(Prelude["const"](_7));
      };
  });
  var mapReaderT = function (f) {
      return function (m) {
          return ReaderT(function (_8) {
              return f(runReaderT(m)(_8));
          });
      };
  };
  var functorReaderT = function (__dict_Functor_12) {
      return new Prelude.Functor(function (f) {
          return mapReaderT(Prelude["<$>"](__dict_Functor_12)(f));
      });
  };
  var applyReaderT = function (__dict_Applicative_17) {
      return new Prelude.Apply(function () {
          return functorReaderT((__dict_Applicative_17["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
      }, function (f) {
          return function (v) {
              return function (r) {
                  return Prelude["<*>"](__dict_Applicative_17["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
              };
          };
      });
  };
  var bindReaderT = function (__dict_Monad_16) {
      return new Prelude.Bind(function () {
          return applyReaderT(__dict_Monad_16["__superclass_Prelude.Applicative_0"]());
      }, function (m) {
          return function (k) {
              return function (r) {
                  return Prelude.bind(__dict_Monad_16["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_0) {
                      return runReaderT(k(_0))(r);
                  });
              };
          };
      });
  };
  var applicativeReaderT = function (__dict_Applicative_18) {
      return new Prelude.Applicative(function () {
          return applyReaderT(__dict_Applicative_18);
      }, function (_10) {
          return ReaderT(Prelude["const"](Prelude.pure(__dict_Applicative_18)(_10)));
      });
  };
  var monadReaderT = function (__dict_Monad_4) {
      return new Prelude.Monad(function () {
          return applicativeReaderT(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
      }, function () {
          return bindReaderT(__dict_Monad_4);
      });
  };
  var monadReaderReaderT = function (__dict_Monad_5) {
      return new Control_Monad_Reader_Class.MonadReader(function () {
          return monadReaderT(__dict_Monad_5);
      }, Prelude["return"](__dict_Monad_5["__superclass_Prelude.Applicative_0"]()), withReaderT);
  };
  exports["ReaderT"] = ReaderT;
  exports["mapReaderT"] = mapReaderT;
  exports["withReaderT"] = withReaderT;
  exports["runReaderT"] = runReaderT;
  exports["functorReaderT"] = functorReaderT;
  exports["applyReaderT"] = applyReaderT;
  exports["applicativeReaderT"] = applicativeReaderT;
  exports["bindReaderT"] = bindReaderT;
  exports["monadReaderT"] = monadReaderT;
  exports["monadTransReaderT"] = monadTransReaderT;
  exports["monadReaderReaderT"] = monadReaderReaderT;;
 
})(PS["Control.Monad.Reader.Trans"] = PS["Control.Monad.Reader.Trans"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.ST

  exports.newSTRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readSTRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeSTRef = function (ref) {
    return function (a) {
      return function () {
        /* jshint boss: true */
        return ref.value = a;
      };
    };
  };
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Control.Monad.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["writeSTRef"] = $foreign.writeSTRef;
  exports["readSTRef"] = $foreign.readSTRef;
  exports["newSTRef"] = $foreign.newSTRef;;
 
})(PS["Control.Monad.ST"] = PS["Control.Monad.ST"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = [];
      for (var i = start, n = 0; i !== end; i += step) {
        result[n++] = i;
      }
      result[n] = i;
      return result;
    };
  };

  exports.replicate = function (n) {
    return function (v) {
      if (n < 1) return [];
      var r = new Array(n);
      for (var i = 0; i < n; i++) r[i] = v;
      return r;
    };
  };

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Maybe.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
 
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Maybe.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["unsafeThrow"] = $foreign.unsafeThrow;;
 
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];     
  var $colon = $foreign.cons;
  var $dot$dot = $foreign.range;
  var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });                          
  var tail = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (_7) {
      return function (xs) {
          return new Data_Maybe.Just(xs);
      };
  });
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var $bang$bang = index;
  var last = function (xs) {
      return $bang$bang(xs)($foreign.length(xs) - 1);
  };
  var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (_6) {
          return new Data_Maybe.Just(x);
      };
  });
  exports["index"] = index;
  exports["!!"] = $bang$bang;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["last"] = last;
  exports["head"] = head;
  exports[":"] = $colon;
  exports["null"] = $$null;
  exports[".."] = $dot$dot;
  exports["zipWith"] = $foreign.zipWith;
  exports["slice"] = $foreign.slice;
  exports["filter"] = $foreign.filter;
  exports["length"] = $foreign.length;
  exports["replicate"] = $foreign.replicate;
  exports["range"] = $foreign.range;;
 
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array.ST

  exports.runSTArray = function (f) {
    return f;
  };

  exports.emptySTArray = function () {
    return [];
  };

  exports.pushAllSTArray = function (xs) {
    return function (as) {
      return function () {
        return xs.push.apply(xs, as);
      };
    };
  };
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Array.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  var pushSTArray = function (arr) {
      return function (a) {
          return $foreign.pushAllSTArray(arr)([ a ]);
      };
  };
  exports["pushSTArray"] = pushSTArray;
  exports["emptySTArray"] = $foreign.emptySTArray;
  exports["runSTArray"] = $foreign.runSTArray;;
 
})(PS["Data.Array.ST"] = PS["Data.Array.ST"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Array.Unsafe

  exports.unsafeIndex = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
 
})(PS["Data.Array.Unsafe"] = PS["Data.Array.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Array.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];     
  var tail = function (xs) {
      return Data_Array.slice(1)(Data_Array.length(xs))(xs);
  };
  var head = function (xs) {
      return $foreign.unsafeIndex(xs)(0);
  };
  exports["tail"] = tail;
  exports["head"] = head;;
 
})(PS["Data.Array.Unsafe"] = PS["Data.Array.Unsafe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Char

  exports.toString = function (c) {
    return c;
  };

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };
 
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Char"];
  var Prelude = PS["Prelude"];
  exports["toCharCode"] = $foreign.toCharCode;
  exports["toString"] = $foreign.toString;;
 
})(PS["Data.Char"] = PS["Data.Char"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // jshint maxparams: 1
  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };

  exports.isNull = function (value) {
    return value === null;
  };

  exports.isUndefined = function (value) {
    return value === undefined;
  };

  exports.isArray = Array.isArray || function (value) {
    return Object.prototype.toString.call(value) === "[object Array]";
  };
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.String

  exports._charAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (s) {
          return i >= 0 && i < s.length ? just(s.charAt(i)) : nothing;
        };
      };
    };
  };

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.toLower = function (s) {
    return s.toLowerCase();
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];                                          
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);      
  var charAt = $foreign._charAt(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["indexOf"] = indexOf;
  exports["charAt"] = charAt;
  exports["joinWith"] = $foreign.joinWith;
  exports["toLower"] = $foreign.toLower;
  exports["length"] = $foreign.length;
  exports["fromCharArray"] = $foreign.fromCharArray;;
 
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];
  var Data_String = PS["Data.String"];     
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if (Prelude["=="](Prelude.eqString)($foreign.tagOf(value))(tag)) {
              return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  };
  var showForeignError = new Prelude.Show(function (_0) {
      if (_0 instanceof TypeMismatch) {
          return "Type mismatch: expected " + (_0.value0 + (", found " + _0.value1));
      };
      if (_0 instanceof ErrorAtIndex) {
          return "Error at array index " + (Prelude.show(Prelude.showInt)(_0.value0) + (": " + Prelude.show(showForeignError)(_0.value1)));
      };
      if (_0 instanceof ErrorAtProperty) {
          return "Error at property " + (Prelude.show(Prelude.showString)(_0.value0) + (": " + Prelude.show(showForeignError)(_0.value1)));
      };
      if (_0 instanceof JSONError) {
          return "JSON error: " + _0.value0;
      };
      throw new Error("Failed pattern match: " + [ _0.constructor.name ]);
  });
  var readString = unsafeReadTagged("String");  
  var readArray = function (value) {
      if ($foreign.isArray(value)) {
          return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
      };
      return new Data_Either.Left(new TypeMismatch("array", $foreign.tagOf(value)));
  };
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["readArray"] = readArray;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["showForeignError"] = showForeignError;
  exports["isUndefined"] = $foreign.isUndefined;
  exports["isNull"] = $foreign.isNull;
  exports["typeOf"] = $foreign.typeOf;
  exports["toForeign"] = $foreign.toForeign;;
 
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foreign.Index

  // jshint maxparams: 4
  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };

  // jshint maxparams: 2
  exports.unsafeHasOwnProperty = function (prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  };

  exports.unsafeHasProperty = function (prop, value) {
    return prop in value;
  };
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Foreign.Index"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function = PS["Data.Function"];
  var Data_Int = PS["Data.Int"];     
  var Index = function (errorAt, hasOwnProperty, hasProperty, ix) {
      this.errorAt = errorAt;
      this.hasOwnProperty = hasOwnProperty;
      this.hasProperty = hasProperty;
      this.ix = ix;
  };
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
      };
  };
  var prop = unsafeReadProp;
  var ix = function (dict) {
      return dict.ix;
  };
  var $bang = function (__dict_Index_0) {
      return ix(__dict_Index_0);
  };                         
  var hasPropertyImpl = function (p) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object") || Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function")) {
              return $foreign.unsafeHasProperty(p, value);
          };
          return false;
      };
  };
  var hasProperty = function (dict) {
      return dict.hasProperty;
  };
  var hasOwnPropertyImpl = function (p) {
      return function (value) {
          if (Data_Foreign.isNull(value)) {
              return false;
          };
          if (Data_Foreign.isUndefined(value)) {
              return false;
          };
          if (Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("object") || Prelude["=="](Prelude.eqString)(Data_Foreign.typeOf(value))("function")) {
              return $foreign.unsafeHasOwnProperty(p, value);
          };
          return false;
      };
  };                                                                                                                   
  var indexString = new Index(Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl, Prelude.flip(prop));
  var hasOwnProperty = function (dict) {
      return dict.hasOwnProperty;
  };
  var errorAt = function (dict) {
      return dict.errorAt;
  };
  exports["Index"] = Index;
  exports["errorAt"] = errorAt;
  exports["hasOwnProperty"] = hasOwnProperty;
  exports["hasProperty"] = hasProperty;
  exports["!"] = $bang;
  exports["ix"] = ix;
  exports["prop"] = prop;
  exports["indexString"] = indexString;;
 
})(PS["Data.Foreign.Index"] = PS["Data.Foreign.Index"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Either = PS["Data.Either"];     
  var NullOrUndefined = function (x) {
      return x;
  };
  var runNullOrUndefined = function (_0) {
      return _0;
  };
  var readNullOrUndefined = function (f) {
      return function (value) {
          if (Data_Foreign.isNull(value) || Data_Foreign.isUndefined(value)) {
              return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          return Prelude["<$>"](Data_Either.functorEither)(function (_4) {
              return NullOrUndefined(Data_Maybe.Just.create(_4));
          })(f(value));
      };
  };
  exports["NullOrUndefined"] = NullOrUndefined;
  exports["readNullOrUndefined"] = readNullOrUndefined;
  exports["runNullOrUndefined"] = runNullOrUndefined;;
 
})(PS["Data.Foreign.NullOrUndefined"] = PS["Data.Foreign.NullOrUndefined"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];
  var Data_Foreign_Null = PS["Data.Foreign.Null"];
  var Data_Foreign_NullOrUndefined = PS["Data.Foreign.NullOrUndefined"];
  var Data_Foreign_Undefined = PS["Data.Foreign.Undefined"];
  var Data_Int = PS["Data.Int"];
  var Data_Traversable = PS["Data.Traversable"];     
  var IsForeign = function (read) {
      this.read = read;
  };
  var stringIsForeign = new IsForeign(Data_Foreign.readString);
  var read = function (dict) {
      return dict.read;
  };
  var readWith = function (__dict_IsForeign_1) {
      return function (f) {
          return function (value) {
              return Data_Either.either(function (_0) {
                  return Data_Either.Left.create(f(_0));
              })(Data_Either.Right.create)(read(__dict_IsForeign_1)(value));
          };
      };
  };
  var readProp = function (__dict_IsForeign_2) {
      return function (__dict_Index_3) {
          return function (prop) {
              return function (value) {
                  return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_3)(value)(prop))(readWith(__dict_IsForeign_2)(Data_Foreign_Index.errorAt(__dict_Index_3)(prop)));
              };
          };
      };
  };                                                           
  var nullOrUndefinedIsForeign = function (__dict_IsForeign_5) {
      return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_5)));
  };                                                     
  var foreignIsForeign = new IsForeign(function (f) {
      return Prelude["return"](Data_Either.applicativeEither)(f);
  });                                                            
  var arrayIsForeign = function (__dict_IsForeign_7) {
      return new IsForeign(function (value) {
          var readElement = function (i) {
              return function (value_1) {
                  return readWith(__dict_IsForeign_7)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
              };
          };
          var readElements = function (arr) {
              return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
          };
          return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
      });
  };
  exports["IsForeign"] = IsForeign;
  exports["readProp"] = readProp;
  exports["readWith"] = readWith;
  exports["read"] = read;
  exports["foreignIsForeign"] = foreignIsForeign;
  exports["stringIsForeign"] = stringIsForeign;
  exports["arrayIsForeign"] = arrayIsForeign;
  exports["nullOrUndefinedIsForeign"] = nullOrUndefinedIsForeign;;
 
})(PS["Data.Foreign.Class"] = PS["Data.Foreign.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Generic


  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipAll = function(f) {
      return function(xs) {
          return function(ys) {
              var l = xs.length < ys.length ? xs.length : ys.length;
              for (var i = 0; i < l; i++) {
                  if (!f(xs[i])(ys[i])) {
                      return false;
                  }
              }
              return true;
          };
      };
  };
 
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Proxy = (function () {
      function Proxy() {

      };
      Proxy.value = new Proxy();
      return Proxy;
  })();
  exports["Proxy"] = Proxy;;
 
})(PS["Type.Proxy"] = PS["Type.Proxy"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Data.Generic"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Array = PS["Data.Array"];
  var Data_String = PS["Data.String"];
  var Type_Proxy = PS["Type.Proxy"];
  var Data_Monoid = PS["Data.Monoid"];     
  var SProd = (function () {
      function SProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SProd.create = function (value0) {
          return function (value1) {
              return new SProd(value0, value1);
          };
      };
      return SProd;
  })();
  var SRecord = (function () {
      function SRecord(value0) {
          this.value0 = value0;
      };
      SRecord.create = function (value0) {
          return new SRecord(value0);
      };
      return SRecord;
  })();
  var SNumber = (function () {
      function SNumber(value0) {
          this.value0 = value0;
      };
      SNumber.create = function (value0) {
          return new SNumber(value0);
      };
      return SNumber;
  })();
  var SBoolean = (function () {
      function SBoolean(value0) {
          this.value0 = value0;
      };
      SBoolean.create = function (value0) {
          return new SBoolean(value0);
      };
      return SBoolean;
  })();
  var SInt = (function () {
      function SInt(value0) {
          this.value0 = value0;
      };
      SInt.create = function (value0) {
          return new SInt(value0);
      };
      return SInt;
  })();
  var SString = (function () {
      function SString(value0) {
          this.value0 = value0;
      };
      SString.create = function (value0) {
          return new SString(value0);
      };
      return SString;
  })();
  var SChar = (function () {
      function SChar(value0) {
          this.value0 = value0;
      };
      SChar.create = function (value0) {
          return new SChar(value0);
      };
      return SChar;
  })();
  var SArray = (function () {
      function SArray(value0) {
          this.value0 = value0;
      };
      SArray.create = function (value0) {
          return new SArray(value0);
      };
      return SArray;
  })();
  var SigProd = (function () {
      function SigProd(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      SigProd.create = function (value0) {
          return function (value1) {
              return new SigProd(value0, value1);
          };
      };
      return SigProd;
  })();
  var SigInt = (function () {
      function SigInt() {

      };
      SigInt.value = new SigInt();
      return SigInt;
  })();
  var SigString = (function () {
      function SigString() {

      };
      SigString.value = new SigString();
      return SigString;
  })();
  var SigArray = (function () {
      function SigArray(value0) {
          this.value0 = value0;
      };
      SigArray.create = function (value0) {
          return new SigArray(value0);
      };
      return SigArray;
  })();
  var Generic = function (fromSpine, toSignature, toSpine) {
      this.fromSpine = fromSpine;
      this.toSignature = toSignature;
      this.toSpine = toSpine;
  };
  var toSpine = function (dict) {
      return dict.toSpine;
  };
  var toSignature = function (dict) {
      return dict.toSignature;
  };
  var genericString = new Generic(function (_11) {
      if (_11 instanceof SString) {
          return new Data_Maybe.Just(_11.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (_10) {
      return SigString.value;
  }, function (x) {
      return new SString(x);
  });
  var genericShowPrec = function (d) {
      return function (_5) {
          if (_5 instanceof SProd) {
              var showParen = function (_29) {
                  return function (x) {
                      if (!_29) {
                          return x;
                      };
                      if (_29) {
                          return "(" + (x + ")");
                      };
                      throw new Error("Failed pattern match at Data.Generic line 240, column 9 - line 241, column 9: " + [ _29.constructor.name, x.constructor.name ]);
                  };
              };
              var _58 = Data_Array["null"](_5.value1);
              if (_58) {
                  return _5.value0;
              };
              if (!_58) {
                  return showParen(d > 10)(_5.value0 + (" " + Data_String.joinWith(" ")(Prelude.map(Prelude.functorArray)(function (x) {
                      return genericShowPrec(11)(x(Prelude.unit));
                  })(_5.value1))));
              };
              throw new Error("Failed pattern match: " + [ _58.constructor.name ]);
          };
          if (_5 instanceof SRecord) {
              return "{" + (Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (x) {
                  return x.recLabel + (": " + genericShowPrec(0)(x.recValue(Prelude.unit)));
              })(_5.value0)) + "}");
          };
          if (_5 instanceof SBoolean) {
              return Prelude.show(Prelude.showBoolean)(_5.value0);
          };
          if (_5 instanceof SInt) {
              return Prelude.show(Prelude.showInt)(_5.value0);
          };
          if (_5 instanceof SNumber) {
              return Prelude.show(Prelude.showNumber)(_5.value0);
          };
          if (_5 instanceof SString) {
              return Prelude.show(Prelude.showString)(_5.value0);
          };
          if (_5 instanceof SChar) {
              return Prelude.show(Prelude.showChar)(_5.value0);
          };
          if (_5 instanceof SArray) {
              return "[" + (Data_String.joinWith(", ")(Prelude.map(Prelude.functorArray)(function (x) {
                  return genericShowPrec(0)(x(Prelude.unit));
              })(_5.value0)) + "]");
          };
          throw new Error("Failed pattern match: " + [ d.constructor.name, _5.constructor.name ]);
      };
  }; 
  var genericInt = new Generic(function (_9) {
      if (_9 instanceof SInt) {
          return new Data_Maybe.Just(_9.value0);
      };
      return Data_Maybe.Nothing.value;
  }, function (_8) {
      return SigInt.value;
  }, function (x) {
      return new SInt(x);
  });
  var gShow = function (__dict_Generic_0) {
      return function (_184) {
          return genericShowPrec(0)(toSpine(__dict_Generic_0)(_184));
      };
  };
  var fromSpine = function (dict) {
      return dict.fromSpine;
  };                                                         
  var eqGeneric = new Prelude.Eq(function (_30) {
      return function (_31) {
          if (_30 instanceof SProd && _31 instanceof SProd) {
              return Prelude["=="](Prelude.eqString)(_30.value0)(_31.value0) && (Data_Array.length(_30.value1) === Data_Array.length(_31.value1) && $foreign.zipAll(function (x) {
                  return function (y) {
                      return Prelude["=="](eqGeneric)(x(Prelude.unit))(y(Prelude.unit));
                  };
              })(_30.value1)(_31.value1));
          };
          if (_30 instanceof SRecord && _31 instanceof SRecord) {
              var go = function (x) {
                  return function (y) {
                      return Prelude["=="](Prelude.eqString)(x.recLabel)(y.recLabel) && Prelude["=="](eqGeneric)(x.recValue(Prelude.unit))(y.recValue(Prelude.unit));
                  };
              };
              return Data_Array.length(_30.value0) === Data_Array.length(_31.value0) && $foreign.zipAll(go)(_30.value0)(_31.value0);
          };
          if (_30 instanceof SInt && _31 instanceof SInt) {
              return _30.value0 === _31.value0;
          };
          if (_30 instanceof SNumber && _31 instanceof SNumber) {
              return _30.value0 === _31.value0;
          };
          if (_30 instanceof SBoolean && _31 instanceof SBoolean) {
              return Prelude["=="](Prelude.eqBoolean)(_30.value0)(_31.value0);
          };
          if (_30 instanceof SChar && _31 instanceof SChar) {
              return Prelude["=="](Prelude.eqChar)(_30.value0)(_31.value0);
          };
          if (_30 instanceof SString && _31 instanceof SString) {
              return Prelude["=="](Prelude.eqString)(_30.value0)(_31.value0);
          };
          if (_30 instanceof SArray && _31 instanceof SArray) {
              return Data_Array.length(_30.value0) === Data_Array.length(_31.value0) && $foreign.zipAll(function (x) {
                  return function (y) {
                      return Prelude["=="](eqGeneric)(x(Prelude.unit))(y(Prelude.unit));
                  };
              })(_30.value0)(_31.value0);
          };
          return false;
      };
  });
  var gEq = function (__dict_Generic_1) {
      return function (x) {
          return function (y) {
              return Prelude["=="](eqGeneric)(toSpine(__dict_Generic_1)(x))(toSpine(__dict_Generic_1)(y));
          };
      };
  };
  var anyProxy = Type_Proxy.Proxy.value;
  var genericArray = function (__dict_Generic_3) {
      return new Generic(function (_16) {
          if (_16 instanceof SArray) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(function (_186) {
                  return fromSpine(__dict_Generic_3)((function (_2) {
                      return _2(Prelude.unit);
                  })(_186));
              })(_16.value0);
          };
          return Data_Maybe.Nothing.value;
      }, function (x) {
          var lowerProxy = function (_17) {
              return anyProxy;
          };
          return new SigArray(function (unit) {
              return toSignature(__dict_Generic_3)(lowerProxy(x));
          });
      }, function (xs) {
          return new SArray(Prelude["<$>"](Prelude.functorArray)(function (x) {
              return function (y) {
                  return toSpine(__dict_Generic_3)(x);
              };
          })(xs));
      });
  };
  exports["SigProd"] = SigProd;
  exports["SigInt"] = SigInt;
  exports["SigString"] = SigString;
  exports["SigArray"] = SigArray;
  exports["SProd"] = SProd;
  exports["SRecord"] = SRecord;
  exports["SNumber"] = SNumber;
  exports["SBoolean"] = SBoolean;
  exports["SInt"] = SInt;
  exports["SString"] = SString;
  exports["SChar"] = SChar;
  exports["SArray"] = SArray;
  exports["Generic"] = Generic;
  exports["gEq"] = gEq;
  exports["gShow"] = gShow;
  exports["fromSpine"] = fromSpine;
  exports["toSignature"] = toSignature;
  exports["toSpine"] = toSpine;
  exports["genericInt"] = genericInt;
  exports["genericString"] = genericString;
  exports["genericArray"] = genericArray;
  exports["eqGeneric"] = eqGeneric;;
 
})(PS["Data.Generic"] = PS["Data.Generic"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Array_ST = PS["Data.Array.ST"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];     
  var Unfoldable = function (unfoldr) {
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function (f) {
      return function (b) {
          return Control_Monad_Eff.runPure(Data_Array_ST.runSTArray(function __do() {
              var _2 = Data_Array_ST.emptySTArray();
              var _1 = Control_Monad_ST.newSTRef(b)();
              (function () {
                  while (!(function __do() {
                      var _0 = Control_Monad_ST.readSTRef(_1)();
                      return (function () {
                          var _6 = f(_0);
                          if (_6 instanceof Data_Maybe.Nothing) {
                              return Prelude["return"](Control_Monad_Eff.applicativeEff)(true);
                          };
                          if (_6 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Data_Array_ST.pushSTArray(_2)(_6.value0.value0)();
                                  Control_Monad_ST.writeSTRef(_1)(_6.value0.value1)();
                                  return Prelude["return"](Control_Monad_Eff.applicativeEff)(false)();
                              };
                          };
                          throw new Error("Failed pattern match at Data.Unfoldable line 29, column 1 - line 49, column 1: " + [ _6.constructor.name ]);
                      })()();
                  })()) {

                  };
                  return {};
              })();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_2)();
          }));
      };
  });
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;;
 
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];     
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var uncons = function (_17) {
      if (_17 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_17 instanceof Cons) {
          return new Data_Maybe.Just({
              head: _17.value0, 
              tail: _17.value1
          });
      };
      throw new Error("Failed pattern match at Data.List line 270, column 1 - line 271, column 1: " + [ _17.constructor.name ]);
  };
  var toUnfoldable = function (__dict_Unfoldable_2) {
      return Data_Unfoldable.unfoldr(__dict_Unfoldable_2)(function (xs) {
          return Prelude["<$>"](Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (_15) {
      if (_15 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_15 instanceof Cons) {
          return new Data_Maybe.Just(_15.value1);
      };
      throw new Error("Failed pattern match at Data.List line 251, column 1 - line 252, column 1: " + [ _15.constructor.name ]);
  };
  var semigroupList = new Prelude.Semigroup(function (_63) {
      return function (ys) {
          if (_63 instanceof Nil) {
              return ys;
          };
          if (_63 instanceof Cons) {
              return new Cons(_63.value0, Prelude["<>"](semigroupList)(_63.value1)(ys));
          };
          throw new Error("Failed pattern match: " + [ _63.constructor.name, ys.constructor.name ]);
      };
  });
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy__41) {
              var acc = __copy_acc;
              var _41 = __copy__41;
              tco: while (true) {
                  var acc_1 = acc;
                  if (_41 instanceof Nil) {
                      return acc_1;
                  };
                  if (_41 instanceof Cons) {
                      var __tco_acc = new Cons(_41.value0, acc);
                      var __tco__41 = _41.value1;
                      acc = __tco_acc;
                      _41 = __tco__41;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 368, column 1 - line 369, column 1: " + [ acc.constructor.name, _41.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  })();                  
  var head = function (_13) {
      if (_13 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_13 instanceof Cons) {
          return new Data_Maybe.Just(_13.value0);
      };
      throw new Error("Failed pattern match at Data.List line 236, column 1 - line 237, column 1: " + [ _13.constructor.name ]);
  };
  var functorList = new Prelude.Functor(function (f) {
      return function (lst) {
          var go = function (__copy__64) {
              return function (__copy_acc) {
                  var _64 = __copy__64;
                  var acc = __copy_acc;
                  tco: while (true) {
                      if (_64 instanceof Nil) {
                          return acc;
                      };
                      if (_64 instanceof Cons) {
                          var __tco__64 = _64.value1;
                          var __tco_acc = new Cons(f(_64.value0), acc);
                          _64 = __tco__64;
                          acc = __tco_acc;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 731, column 1 - line 738, column 1: " + [ _64.constructor.name, acc.constructor.name ]);
                  };
              };
          };
          return reverse(go(lst)(Nil.value));
      };
  });
  var fromList = function (__dict_Unfoldable_15) {
      return toUnfoldable(__dict_Unfoldable_15);
  };
  var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_18) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function (_318) {
                  return Prelude.append(__dict_Monoid_18["__superclass_Prelude.Semigroup_0"]())(acc)(f(_318));
              };
          })(Data_Monoid.mempty(__dict_Monoid_18));
      };
  }, (function () {
      var go = function (__copy_o) {
          return function (__copy_b) {
              return function (__copy__66) {
                  var o = __copy_o;
                  var b = __copy_b;
                  var _66 = __copy__66;
                  tco: while (true) {
                      var b_1 = b;
                      if (_66 instanceof Nil) {
                          return b_1;
                      };
                      if (_66 instanceof Cons) {
                          var __tco_o = o;
                          var __tco_b = o(b)(_66.value0);
                          var __tco__66 = _66.value1;
                          o = __tco_o;
                          b = __tco_b;
                          _66 = __tco__66;
                          continue tco;
                      };
                      throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _66.constructor.name ]);
                  };
              };
          };
      };
      return go;
  })(), function (o) {
      return function (b) {
          return function (_65) {
              if (_65 instanceof Nil) {
                  return b;
              };
              if (_65 instanceof Cons) {
                  return o(_65.value0)(Data_Foldable.foldr(foldableList)(o)(b)(_65.value1));
              };
              throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _65.constructor.name ]);
          };
      };
  });                                                      
  var applyList = new Prelude.Apply(function () {
      return functorList;
  }, function (_69) {
      return function (xs) {
          if (_69 instanceof Nil) {
              return Nil.value;
          };
          if (_69 instanceof Cons) {
              return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(_69.value0)(xs))(Prelude["<*>"](applyList)(_69.value1)(xs));
          };
          throw new Error("Failed pattern match: " + [ _69.constructor.name, xs.constructor.name ]);
      };
  });
  var applicativeList = new Prelude.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["fromList"] = fromList;
  exports["reverse"] = reverse;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports["toUnfoldable"] = toUnfoldable;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;;
 
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];     
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var toList = function (_7) {
      if (_7 instanceof Leaf) {
          return Data_List.Nil.value;
      };
      if (_7 instanceof Two) {
          return Prelude["++"](Data_List.semigroupList)(toList(_7.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_7.value1, _7.value2)))(toList(_7.value3)));
      };
      if (_7 instanceof Three) {
          return Prelude["++"](Data_List.semigroupList)(toList(_7.value0))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_7.value1, _7.value2)))(Prelude["++"](Data_List.semigroupList)(toList(_7.value3))(Prelude["++"](Data_List.semigroupList)(Prelude.pure(Data_List.applicativeList)(new Data_Tuple.Tuple(_7.value4, _7.value5)))(toList(_7.value6)))));
      };
      throw new Error("Failed pattern match: " + [ _7.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var lookup = function (__copy___dict_Ord_6) {
      return function (__copy_k) {
          return function (__copy__4) {
              var __dict_Ord_6 = __copy___dict_Ord_6;
              var k = __copy_k;
              var _4 = __copy__4;
              tco: while (true) {
                  if (_4 instanceof Leaf) {
                      return Data_Maybe.Nothing.value;
                  };
                  var k_1 = k;
                  if (_4 instanceof Two && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_4.value1)) {
                      return new Data_Maybe.Just(_4.value2);
                  };
                  var k_1 = k;
                  if (_4 instanceof Two && Prelude["<"](__dict_Ord_6)(k_1)(_4.value1)) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco__4 = _4.value0;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = k_1;
                      _4 = __tco__4;
                      continue tco;
                  };
                  var k_1 = k;
                  if (_4 instanceof Two) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco__4 = _4.value3;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = k_1;
                      _4 = __tco__4;
                      continue tco;
                  };
                  var k_1 = k;
                  if (_4 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_4.value1)) {
                      return new Data_Maybe.Just(_4.value2);
                  };
                  var k_1 = k;
                  if (_4 instanceof Three && Prelude["=="](__dict_Ord_6["__superclass_Prelude.Eq_0"]())(k_1)(_4.value4)) {
                      return new Data_Maybe.Just(_4.value5);
                  };
                  var k_1 = k;
                  if (_4 instanceof Three && Prelude["<"](__dict_Ord_6)(k_1)(_4.value1)) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco__4 = _4.value0;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = k_1;
                      _4 = __tco__4;
                      continue tco;
                  };
                  var k_1 = k;
                  if (_4 instanceof Three && (Prelude["<"](__dict_Ord_6)(_4.value1)(k_1) && Prelude["<="](__dict_Ord_6)(k_1)(_4.value4))) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco__4 = _4.value3;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = k_1;
                      _4 = __tco__4;
                      continue tco;
                  };
                  if (_4 instanceof Three) {
                      var __tco___dict_Ord_6 = __dict_Ord_6;
                      var __tco_k = k;
                      var __tco__4 = _4.value6;
                      __dict_Ord_6 = __tco___dict_Ord_6;
                      k = __tco_k;
                      _4 = __tco__4;
                      continue tco;
                  };
                  throw new Error("Failed pattern match: " + [ k.constructor.name, _4.constructor.name ]);
              };
          };
      };
  };
  var member = function (__dict_Ord_7) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(__dict_Ord_7)(k)(m));
          };
      };
  }; 
  var fromZipper = function (__copy___dict_Ord_8) {
      return function (__copy__5) {
          return function (__copy__6) {
              var __dict_Ord_8 = __copy___dict_Ord_8;
              var _5 = __copy__5;
              var _6 = __copy__6;
              tco: while (true) {
                  if (_5 instanceof Data_List.Nil) {
                      return _6;
                  };
                  if (_5 instanceof Data_List.Cons && _5.value0 instanceof TwoLeft) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__5 = _5.value1;
                      var __tco__6 = new Two(_6, _5.value0.value0, _5.value0.value1, _5.value0.value2);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _5 = __tco__5;
                      _6 = __tco__6;
                      continue tco;
                  };
                  if (_5 instanceof Data_List.Cons && _5.value0 instanceof TwoRight) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__5 = _5.value1;
                      var __tco__6 = new Two(_5.value0.value0, _5.value0.value1, _5.value0.value2, _6);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _5 = __tco__5;
                      _6 = __tco__6;
                      continue tco;
                  };
                  if (_5 instanceof Data_List.Cons && _5.value0 instanceof ThreeLeft) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__5 = _5.value1;
                      var __tco__6 = new Three(_6, _5.value0.value0, _5.value0.value1, _5.value0.value2, _5.value0.value3, _5.value0.value4, _5.value0.value5);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _5 = __tco__5;
                      _6 = __tco__6;
                      continue tco;
                  };
                  if (_5 instanceof Data_List.Cons && _5.value0 instanceof ThreeMiddle) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__5 = _5.value1;
                      var __tco__6 = new Three(_5.value0.value0, _5.value0.value1, _5.value0.value2, _6, _5.value0.value3, _5.value0.value4, _5.value0.value5);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _5 = __tco__5;
                      _6 = __tco__6;
                      continue tco;
                  };
                  if (_5 instanceof Data_List.Cons && _5.value0 instanceof ThreeRight) {
                      var __tco___dict_Ord_8 = __dict_Ord_8;
                      var __tco__5 = _5.value1;
                      var __tco__6 = new Three(_5.value0.value0, _5.value0.value1, _5.value0.value2, _5.value0.value3, _5.value0.value4, _5.value0.value5, _6);
                      __dict_Ord_8 = __tco___dict_Ord_8;
                      _5 = __tco__5;
                      _6 = __tco__6;
                      continue tco;
                  };
                  throw new Error("Failed pattern match: " + [ _5.constructor.name, _6.constructor.name ]);
              };
          };
      };
  };
  var insert = function (__dict_Ord_9) {
      var up = function (__copy__13) {
          return function (__copy__14) {
              var _13 = __copy__13;
              var _14 = __copy__14;
              tco: while (true) {
                  if (_13 instanceof Data_List.Nil) {
                      return new Two(_14.value0, _14.value1, _14.value2, _14.value3);
                  };
                  if (_13 instanceof Data_List.Cons && _13.value0 instanceof TwoLeft) {
                      return fromZipper(__dict_Ord_9)(_13.value1)(new Three(_14.value0, _14.value1, _14.value2, _14.value3, _13.value0.value0, _13.value0.value1, _13.value0.value2));
                  };
                  if (_13 instanceof Data_List.Cons && _13.value0 instanceof TwoRight) {
                      return fromZipper(__dict_Ord_9)(_13.value1)(new Three(_13.value0.value0, _13.value0.value1, _13.value0.value2, _14.value0, _14.value1, _14.value2, _14.value3));
                  };
                  if (_13 instanceof Data_List.Cons && _13.value0 instanceof ThreeLeft) {
                      var __tco__13 = _13.value1;
                      var __tco__14 = new KickUp(new Two(_14.value0, _14.value1, _14.value2, _14.value3), _13.value0.value0, _13.value0.value1, new Two(_13.value0.value2, _13.value0.value3, _13.value0.value4, _13.value0.value5));
                      _13 = __tco__13;
                      _14 = __tco__14;
                      continue tco;
                  };
                  if (_13 instanceof Data_List.Cons && _13.value0 instanceof ThreeMiddle) {
                      var __tco__13 = _13.value1;
                      var __tco__14 = new KickUp(new Two(_13.value0.value0, _13.value0.value1, _13.value0.value2, _14.value0), _14.value1, _14.value2, new Two(_14.value3, _13.value0.value3, _13.value0.value4, _13.value0.value5));
                      _13 = __tco__13;
                      _14 = __tco__14;
                      continue tco;
                  };
                  if (_13 instanceof Data_List.Cons && _13.value0 instanceof ThreeRight) {
                      var __tco__13 = _13.value1;
                      var __tco__14 = new KickUp(new Two(_13.value0.value0, _13.value0.value1, _13.value0.value2, _13.value0.value3), _13.value0.value4, _13.value0.value5, new Two(_14.value0, _14.value1, _14.value2, _14.value3));
                      _13 = __tco__13;
                      _14 = __tco__14;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.Map line 150, column 1 - line 151, column 1: " + [ _13.constructor.name, _14.constructor.name ]);
              };
          };
      };
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy_v) {
                  return function (__copy__12) {
                      var ctx = __copy_ctx;
                      var k = __copy_k;
                      var v = __copy_v;
                      var _12 = __copy__12;
                      tco: while (true) {
                          var ctx_1 = ctx;
                          var k_1 = k;
                          var v_1 = v;
                          if (_12 instanceof Leaf) {
                              return up(ctx_1)(new KickUp(Leaf.value, k_1, v_1, Leaf.value));
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          var v_1 = v;
                          if (_12 instanceof Two && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(k_1)(_12.value1)) {
                              return fromZipper(__dict_Ord_9)(ctx_1)(new Two(_12.value0, k_1, v_1, _12.value3));
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          var v_1 = v;
                          if (_12 instanceof Two && Prelude["<"](__dict_Ord_9)(k_1)(_12.value1)) {
                              var __tco_ctx = new Data_List.Cons(new TwoLeft(_12.value1, _12.value2, _12.value3), ctx_1);
                              var __tco__12 = _12.value0;
                              ctx = __tco_ctx;
                              k = k_1;
                              v = v_1;
                              _12 = __tco__12;
                              continue tco;
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          var v_1 = v;
                          if (_12 instanceof Two) {
                              var __tco_ctx = new Data_List.Cons(new TwoRight(_12.value0, _12.value1, _12.value2), ctx_1);
                              var __tco__12 = _12.value3;
                              ctx = __tco_ctx;
                              k = k_1;
                              v = v_1;
                              _12 = __tco__12;
                              continue tco;
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          var v_1 = v;
                          if (_12 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(k_1)(_12.value1)) {
                              return fromZipper(__dict_Ord_9)(ctx_1)(new Three(_12.value0, k_1, v_1, _12.value3, _12.value4, _12.value5, _12.value6));
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          var v_1 = v;
                          if (_12 instanceof Three && Prelude["=="](__dict_Ord_9["__superclass_Prelude.Eq_0"]())(k_1)(_12.value4)) {
                              return fromZipper(__dict_Ord_9)(ctx_1)(new Three(_12.value0, _12.value1, _12.value2, _12.value3, k_1, v_1, _12.value6));
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          var v_1 = v;
                          if (_12 instanceof Three && Prelude["<"](__dict_Ord_9)(k_1)(_12.value1)) {
                              var __tco_ctx = new Data_List.Cons(new ThreeLeft(_12.value1, _12.value2, _12.value3, _12.value4, _12.value5, _12.value6), ctx_1);
                              var __tco__12 = _12.value0;
                              ctx = __tco_ctx;
                              k = k_1;
                              v = v_1;
                              _12 = __tco__12;
                              continue tco;
                          };
                          var ctx_1 = ctx;
                          var k_1 = k;
                          var v_1 = v;
                          if (_12 instanceof Three && (Prelude["<"](__dict_Ord_9)(_12.value1)(k_1) && Prelude["<="](__dict_Ord_9)(k_1)(_12.value4))) {
                              var __tco_ctx = new Data_List.Cons(new ThreeMiddle(_12.value0, _12.value1, _12.value2, _12.value4, _12.value5, _12.value6), ctx_1);
                              var __tco__12 = _12.value3;
                              ctx = __tco_ctx;
                              k = k_1;
                              v = v_1;
                              _12 = __tco__12;
                              continue tco;
                          };
                          if (_12 instanceof Three) {
                              var __tco_ctx = new Data_List.Cons(new ThreeRight(_12.value0, _12.value1, _12.value2, _12.value3, _12.value4, _12.value5), ctx);
                              var __tco_k = k;
                              var __tco_v = v;
                              var __tco__12 = _12.value6;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              v = __tco_v;
                              _12 = __tco__12;
                              continue tco;
                          };
                          throw new Error("Failed pattern match at Data.Map line 150, column 1 - line 151, column 1: " + [ ctx.constructor.name, k.constructor.name, v.constructor.name, _12.constructor.name ]);
                      };
                  };
              };
          };
      };
      return down(Data_List.Nil.value);
  };
  var empty = Leaf.value;
  var $$delete = function (__dict_Ord_17) {
      var up = function (__copy__16) {
          return function (__copy__17) {
              var _16 = __copy__16;
              var _17 = __copy__17;
              tco: while (true) {
                  if (_16 instanceof Data_List.Nil) {
                      return _17;
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof TwoLeft && (_16.value0.value2 instanceof Leaf && _17 instanceof Leaf))) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Two(Leaf.value, _16.value0.value0, _16.value0.value1, Leaf.value));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof TwoRight && (_16.value0.value0 instanceof Leaf && _17 instanceof Leaf))) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Two(Leaf.value, _16.value0.value1, _16.value0.value2, Leaf.value));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof TwoLeft && _16.value0.value2 instanceof Two)) {
                      var __tco__16 = _16.value1;
                      var __tco__17 = new Three(_17, _16.value0.value0, _16.value0.value1, _16.value0.value2.value0, _16.value0.value2.value1, _16.value0.value2.value2, _16.value0.value2.value3);
                      _16 = __tco__16;
                      _17 = __tco__17;
                      continue tco;
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof TwoRight && _16.value0.value0 instanceof Two)) {
                      var __tco__16 = _16.value1;
                      var __tco__17 = new Three(_16.value0.value0.value0, _16.value0.value0.value1, _16.value0.value0.value2, _16.value0.value0.value3, _16.value0.value1, _16.value0.value2, _17);
                      _16 = __tco__16;
                      _17 = __tco__17;
                      continue tco;
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof TwoLeft && _16.value0.value2 instanceof Three)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Two(new Two(_17, _16.value0.value0, _16.value0.value1, _16.value0.value2.value0), _16.value0.value2.value1, _16.value0.value2.value2, new Two(_16.value0.value2.value3, _16.value0.value2.value4, _16.value0.value2.value5, _16.value0.value2.value6)));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof TwoRight && _16.value0.value0 instanceof Three)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Two(new Two(_16.value0.value0.value0, _16.value0.value0.value1, _16.value0.value0.value2, _16.value0.value0.value3), _16.value0.value0.value4, _16.value0.value0.value5, new Two(_16.value0.value0.value6, _16.value0.value1, _16.value0.value2, _17)));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeLeft && (_16.value0.value2 instanceof Leaf && (_16.value0.value5 instanceof Leaf && _17 instanceof Leaf)))) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Three(Leaf.value, _16.value0.value0, _16.value0.value1, Leaf.value, _16.value0.value3, _16.value0.value4, Leaf.value));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeMiddle && (_16.value0.value0 instanceof Leaf && (_16.value0.value5 instanceof Leaf && _17 instanceof Leaf)))) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Three(Leaf.value, _16.value0.value1, _16.value0.value2, Leaf.value, _16.value0.value3, _16.value0.value4, Leaf.value));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeRight && (_16.value0.value0 instanceof Leaf && (_16.value0.value3 instanceof Leaf && _17 instanceof Leaf)))) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Three(Leaf.value, _16.value0.value1, _16.value0.value2, Leaf.value, _16.value0.value4, _16.value0.value5, Leaf.value));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeLeft && _16.value0.value2 instanceof Two)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Two(new Three(_17, _16.value0.value0, _16.value0.value1, _16.value0.value2.value0, _16.value0.value2.value1, _16.value0.value2.value2, _16.value0.value2.value3), _16.value0.value3, _16.value0.value4, _16.value0.value5));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeMiddle && _16.value0.value0 instanceof Two)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Two(new Three(_16.value0.value0.value0, _16.value0.value0.value1, _16.value0.value0.value2, _16.value0.value0.value3, _16.value0.value1, _16.value0.value2, _17), _16.value0.value3, _16.value0.value4, _16.value0.value5));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeMiddle && _16.value0.value5 instanceof Two)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Two(_16.value0.value0, _16.value0.value1, _16.value0.value2, new Three(_17, _16.value0.value3, _16.value0.value4, _16.value0.value5.value0, _16.value0.value5.value1, _16.value0.value5.value2, _16.value0.value5.value3)));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeRight && _16.value0.value3 instanceof Two)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Two(_16.value0.value0, _16.value0.value1, _16.value0.value2, new Three(_16.value0.value3.value0, _16.value0.value3.value1, _16.value0.value3.value2, _16.value0.value3.value3, _16.value0.value4, _16.value0.value5, _17)));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeLeft && _16.value0.value2 instanceof Three)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Three(new Two(_17, _16.value0.value0, _16.value0.value1, _16.value0.value2.value0), _16.value0.value2.value1, _16.value0.value2.value2, new Two(_16.value0.value2.value3, _16.value0.value2.value4, _16.value0.value2.value5, _16.value0.value2.value6), _16.value0.value3, _16.value0.value4, _16.value0.value5));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeMiddle && _16.value0.value0 instanceof Three)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Three(new Two(_16.value0.value0.value0, _16.value0.value0.value1, _16.value0.value0.value2, _16.value0.value0.value3), _16.value0.value0.value4, _16.value0.value0.value5, new Two(_16.value0.value0.value6, _16.value0.value1, _16.value0.value2, _17), _16.value0.value3, _16.value0.value4, _16.value0.value5));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeMiddle && _16.value0.value5 instanceof Three)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Three(_16.value0.value0, _16.value0.value1, _16.value0.value2, new Two(_17, _16.value0.value3, _16.value0.value4, _16.value0.value5.value0), _16.value0.value5.value1, _16.value0.value5.value2, new Two(_16.value0.value5.value3, _16.value0.value5.value4, _16.value0.value5.value5, _16.value0.value5.value6)));
                  };
                  if (_16 instanceof Data_List.Cons && (_16.value0 instanceof ThreeRight && _16.value0.value3 instanceof Three)) {
                      return fromZipper(__dict_Ord_17)(_16.value1)(new Three(_16.value0.value0, _16.value0.value1, _16.value0.value2, new Two(_16.value0.value3.value0, _16.value0.value3.value1, _16.value0.value3.value2, _16.value0.value3.value3), _16.value0.value3.value4, _16.value0.value3.value5, new Two(_16.value0.value3.value6, _16.value0.value4, _16.value0.value5, _17)));
                  };
                  return Data_Maybe_Unsafe.unsafeThrow("Impossible case in 'up'");
              };
          };
      };
      var removeMaxNode = function (__copy_ctx) {
          return function (__copy__19) {
              var ctx = __copy_ctx;
              var _19 = __copy__19;
              tco: while (true) {
                  var ctx_1 = ctx;
                  if (_19 instanceof Two && (_19.value0 instanceof Leaf && _19.value3 instanceof Leaf)) {
                      return up(ctx_1)(Leaf.value);
                  };
                  var ctx_1 = ctx;
                  if (_19 instanceof Two) {
                      var __tco_ctx = new Data_List.Cons(new TwoRight(_19.value0, _19.value1, _19.value2), ctx_1);
                      var __tco__19 = _19.value3;
                      ctx = __tco_ctx;
                      _19 = __tco__19;
                      continue tco;
                  };
                  var ctx_1 = ctx;
                  if (_19 instanceof Three && (_19.value0 instanceof Leaf && (_19.value3 instanceof Leaf && _19.value6 instanceof Leaf))) {
                      return up(new Data_List.Cons(new TwoRight(Leaf.value, _19.value1, _19.value2), ctx_1))(Leaf.value);
                  };
                  if (_19 instanceof Three) {
                      var __tco_ctx = new Data_List.Cons(new ThreeRight(_19.value0, _19.value1, _19.value2, _19.value3, _19.value4, _19.value5), ctx);
                      var __tco__19 = _19.value6;
                      ctx = __tco_ctx;
                      _19 = __tco__19;
                      continue tco;
                  };
                  if (_19 instanceof Leaf) {
                      return Data_Maybe_Unsafe.unsafeThrow("Impossible case in 'removeMaxNode'");
                  };
                  throw new Error("Failed pattern match at Data.Map line 173, column 1 - line 174, column 1: " + [ ctx.constructor.name, _19.constructor.name ]);
              };
          };
      };
      var maxNode = function (__copy__18) {
          var _18 = __copy__18;
          tco: while (true) {
              if (_18 instanceof Two && _18.value3 instanceof Leaf) {
                  return {
                      key: _18.value1, 
                      value: _18.value2
                  };
              };
              if (_18 instanceof Two) {
                  var __tco__18 = _18.value3;
                  _18 = __tco__18;
                  continue tco;
              };
              if (_18 instanceof Three && _18.value6 instanceof Leaf) {
                  return {
                      key: _18.value4, 
                      value: _18.value5
                  };
              };
              if (_18 instanceof Three) {
                  var __tco__18 = _18.value6;
                  _18 = __tco__18;
                  continue tco;
              };
              if (_18 instanceof Leaf) {
                  return Data_Maybe_Unsafe.unsafeThrow("Impossible case in 'maxNode'");
              };
              throw new Error("Failed pattern match at Data.Map line 173, column 1 - line 174, column 1: " + [ _18.constructor.name ]);
          };
      };
      var down = function (__copy_ctx) {
          return function (__copy_k) {
              return function (__copy__15) {
                  var ctx = __copy_ctx;
                  var k = __copy_k;
                  var _15 = __copy__15;
                  tco: while (true) {
                      var ctx_1 = ctx;
                      if (_15 instanceof Leaf) {
                          return fromZipper(__dict_Ord_17)(ctx_1)(Leaf.value);
                      };
                      var ctx_1 = ctx;
                      var k_1 = k;
                      if (_15 instanceof Two && (_15.value0 instanceof Leaf && (_15.value3 instanceof Leaf && Prelude["=="](__dict_Ord_17["__superclass_Prelude.Eq_0"]())(k_1)(_15.value1)))) {
                          return up(ctx_1)(Leaf.value);
                      };
                      var ctx_1 = ctx;
                      var k_1 = k;
                      if (_15 instanceof Two) {
                          if (Prelude["=="](__dict_Ord_17["__superclass_Prelude.Eq_0"]())(k_1)(_15.value1)) {
                              var max = maxNode(_15.value0);
                              return removeMaxNode(new Data_List.Cons(new TwoLeft(max.key, max.value, _15.value3), ctx_1))(_15.value0);
                          };
                          if (Prelude["<"](__dict_Ord_17)(k_1)(_15.value1)) {
                              var __tco_ctx = new Data_List.Cons(new TwoLeft(_15.value1, _15.value2, _15.value3), ctx_1);
                              var __tco__15 = _15.value0;
                              ctx = __tco_ctx;
                              k = k_1;
                              _15 = __tco__15;
                              continue tco;
                          };
                          if (Prelude.otherwise) {
                              var __tco_ctx = new Data_List.Cons(new TwoRight(_15.value0, _15.value1, _15.value2), ctx_1);
                              var __tco__15 = _15.value3;
                              ctx = __tco_ctx;
                              k = k_1;
                              _15 = __tco__15;
                              continue tco;
                          };
                      };
                      var ctx_1 = ctx;
                      var k_1 = k;
                      if (_15 instanceof Three && (_15.value0 instanceof Leaf && (_15.value3 instanceof Leaf && _15.value6 instanceof Leaf))) {
                          if (Prelude["=="](__dict_Ord_17["__superclass_Prelude.Eq_0"]())(k_1)(_15.value1)) {
                              return fromZipper(__dict_Ord_17)(ctx_1)(new Two(Leaf.value, _15.value4, _15.value5, Leaf.value));
                          };
                          if (Prelude["=="](__dict_Ord_17["__superclass_Prelude.Eq_0"]())(k_1)(_15.value4)) {
                              return fromZipper(__dict_Ord_17)(ctx_1)(new Two(Leaf.value, _15.value1, _15.value2, Leaf.value));
                          };
                      };
                      if (_15 instanceof Three) {
                          if (Prelude["=="](__dict_Ord_17["__superclass_Prelude.Eq_0"]())(k)(_15.value1)) {
                              var max = maxNode(_15.value0);
                              return removeMaxNode(new Data_List.Cons(new ThreeLeft(max.key, max.value, _15.value3, _15.value4, _15.value5, _15.value6), ctx))(_15.value0);
                          };
                          if (Prelude["=="](__dict_Ord_17["__superclass_Prelude.Eq_0"]())(k)(_15.value4)) {
                              var max = maxNode(_15.value3);
                              return removeMaxNode(new Data_List.Cons(new ThreeMiddle(_15.value0, _15.value1, _15.value2, max.key, max.value, _15.value6), ctx))(_15.value3);
                          };
                          if (Prelude["<"](__dict_Ord_17)(k)(_15.value1)) {
                              var __tco_ctx = new Data_List.Cons(new ThreeLeft(_15.value1, _15.value2, _15.value3, _15.value4, _15.value5, _15.value6), ctx);
                              var __tco_k = k;
                              var __tco__15 = _15.value0;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              _15 = __tco__15;
                              continue tco;
                          };
                          if (Prelude["<"](__dict_Ord_17)(_15.value1)(k) && Prelude["<"](__dict_Ord_17)(k)(_15.value4)) {
                              var __tco_ctx = new Data_List.Cons(new ThreeMiddle(_15.value0, _15.value1, _15.value2, _15.value4, _15.value5, _15.value6), ctx);
                              var __tco_k = k;
                              var __tco__15 = _15.value3;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              _15 = __tco__15;
                              continue tco;
                          };
                          if (Prelude.otherwise) {
                              var __tco_ctx = new Data_List.Cons(new ThreeRight(_15.value0, _15.value1, _15.value2, _15.value3, _15.value4, _15.value5), ctx);
                              var __tco_k = k;
                              var __tco__15 = _15.value6;
                              ctx = __tco_ctx;
                              k = __tco_k;
                              _15 = __tco__15;
                              continue tco;
                          };
                      };
                      throw new Error("Failed pattern match at Data.Map line 173, column 1 - line 174, column 1: " + [ ctx.constructor.name, k.constructor.name, _15.constructor.name ]);
                  };
              };
          };
      };
      return down(Data_List.Nil.value);
  };
  var alter = function (__dict_Ord_18) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var _553 = f(lookup(__dict_Ord_18)(k)(m));
                  if (_553 instanceof Data_Maybe.Nothing) {
                      return $$delete(__dict_Ord_18)(k)(m);
                  };
                  if (_553 instanceof Data_Maybe.Just) {
                      return insert(__dict_Ord_18)(k)(_553.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map line 235, column 1 - line 236, column 1: " + [ _553.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (__dict_Ord_22) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (_21) {
                          return alter(__dict_Ord_22)(function (_566) {
                              return Data_Maybe.Just.create(Data_Maybe.maybe(_21.value1)(f(_21.value1))(_566));
                          })(_21.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List.foldableList)(go)(m2)(toList(m1));
              };
          };
      };
  };
  exports["unionWith"] = unionWith;
  exports["alter"] = alter;
  exports["member"] = member;
  exports["toList"] = toList;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["singleton"] = singleton;
  exports["empty"] = empty;;
 
})(PS["Data.Map"] = PS["Data.Map"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Either = PS["Data.Either"];     
  var isLeft = Data_Either.isLeft;
  exports["isLeft"] = isLeft;;
 
})(PS["Language.Verne"] = PS["Language.Verne"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Generic = PS["Data.Generic"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Maybe = PS["Data.Maybe"];     
  var ParseError = (function () {
      function ParseError(value0) {
          this.value0 = value0;
      };
      ParseError.create = function (value0) {
          return new ParseError(value0);
      };
      return ParseError;
  })();
  var EndOfInput = (function () {
      function EndOfInput() {

      };
      EndOfInput.value = new EndOfInput();
      return EndOfInput;
  })();
  var Parser = (function () {
      function Parser(value0) {
          this.value0 = value0;
      };
      Parser.create = function (value0) {
          return new Parser(value0);
      };
      return Parser;
  })();
  var unParser = function (_9) {
      return _9.value0;
  };
  var $$try = function (p) {
      return new Parser(function (_8) {
          return function (fc) {
              return function (sc) {
                  return unParser(p)(_8)(function (_7) {
                      return fc(_8.pos);
                  })(sc);
              };
          };
      });
  };
  var genericParseError = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Text.Parsing.StringParser.ParseError" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ParseError.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Text.Parsing.StringParser.EndOfInput" && $dollarx.value1.length === 0)) {
          return new Data_Maybe.Just(EndOfInput.value);
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Text.Parsing.StringParser.ParseError", [ {
          sigConstructor: "Text.Parsing.StringParser.ParseError", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Text.Parsing.StringParser.EndOfInput", 
          sigValues: [  ]
      } ]);
  }, function ($dollarx) {
      if ($dollarx instanceof ParseError) {
          return new Data_Generic.SProd("Text.Parsing.StringParser.ParseError", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof EndOfInput) {
          return new Data_Generic.SProd("Text.Parsing.StringParser.EndOfInput", [  ]);
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser line 31, column 1 - line 33, column 1: " + [ $dollarx.constructor.name ]);
  });
  var functorParser = new Prelude.Functor(function (f) {
      return function (p) {
          return new Parser(function (s) {
              return function (fc) {
                  return function (sc) {
                      return unParser(p)(s)(fc)(function (a) {
                          return function (s$prime) {
                              return sc(f(a))(s$prime);
                          };
                      });
                  };
              };
          });
      };
  });
  var fail = function (msg) {
      return new Parser(function (_6) {
          return function (fc) {
              return function (_5) {
                  return fc(_6.pos)(new ParseError(msg));
              };
          };
      });
  };
  var eqParseError = new Prelude.Eq(function (_11) {
      return function (_12) {
          if (_11 instanceof ParseError && _12 instanceof ParseError) {
              return Prelude["=="](Prelude.eqString)(_11.value0)(_12.value0);
          };
          if (_11 instanceof EndOfInput && _12 instanceof EndOfInput) {
              return true;
          };
          return false;
      };
  });
  var applyParser = new Prelude.Apply(function () {
      return functorParser;
  }, function (f) {
      return function (x) {
          return new Parser(function (s) {
              return function (fc) {
                  return function (sc) {
                      return unParser(f)(s)(fc)(function (f$prime) {
                          return function (s$prime) {
                              return unParser(x)(s$prime)(fc)(function (x$prime) {
                                  return function (s$prime$prime) {
                                      return sc(f$prime(x$prime))(s$prime$prime);
                                  };
                              });
                          };
                      });
                  };
              };
          });
      };
  });
  var bindParser = new Prelude.Bind(function () {
      return applyParser;
  }, function (p) {
      return function (f) {
          return new Parser(function (s) {
              return function (fc) {
                  return function (sc) {
                      return unParser(p)(s)(fc)(function (a) {
                          return function (s$prime) {
                              return unParser(f(a))(s$prime)(fc)(sc);
                          };
                      });
                  };
              };
          });
      };
  });
  var applicativeParser = new Prelude.Applicative(function () {
      return applyParser;
  }, function (a) {
      return new Parser(function (s) {
          return function (_2) {
              return function (sc) {
                  return sc(a)(s);
              };
          };
      });
  });
  var altParser = new Control_Alt.Alt(function () {
      return functorParser;
  }, function (p1) {
      return function (p2) {
          return new Parser(function (s) {
              return function (fc) {
                  return function (sc) {
                      return unParser(p1)(s)(function (_4) {
                          return function (_3) {
                              return unParser(p2)(s)(fc)(sc);
                          };
                      })(sc);
                  };
              };
          });
      };
  });
  exports["Parser"] = Parser;
  exports["ParseError"] = ParseError;
  exports["EndOfInput"] = EndOfInput;
  exports["try"] = $$try;
  exports["fail"] = fail;
  exports["unParser"] = unParser;
  exports["genericParseError"] = genericParseError;
  exports["eqParseError"] = eqParseError;
  exports["functorParser"] = functorParser;
  exports["applyParser"] = applyParser;
  exports["applicativeParser"] = applicativeParser;
  exports["altParser"] = altParser;
  exports["bindParser"] = bindParser;;
 
})(PS["Text.Parsing.StringParser"] = PS["Text.Parsing.StringParser"] || {});
(function(exports) {
  /* global exports */
  "use strict";                                                                       

  exports.isSame = function(a,b) { return a === b }

 
})(PS["Language.Verne.Utils"] = PS["Language.Verne.Utils"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var $foreign = PS["Language.Verne.Utils"];
  exports["isSame"] = $foreign.isSame;;
 
})(PS["Language.Verne.Utils"] = PS["Language.Verne.Utils"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Generic = PS["Data.Generic"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Foreign_NullOrUndefined = PS["Data.Foreign.NullOrUndefined"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Language_Verne_Utils = PS["Language.Verne.Utils"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign_Index = PS["Data.Foreign.Index"];     
  var Pos = (function () {
      function Pos(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Pos.create = function (value0) {
          return function (value1) {
              return new Pos(value0, value1);
          };
      };
      return Pos;
  })();
  var Success = (function () {
      function Success(value0) {
          this.value0 = value0;
      };
      Success.create = function (value0) {
          return new Success(value0);
      };
      return Success;
  })();
  var Partial = (function () {
      function Partial(value0) {
          this.value0 = value0;
      };
      Partial.create = function (value0) {
          return new Partial(value0);
      };
      return Partial;
  })();
  var Failure = (function () {
      function Failure(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Failure.create = function (value0) {
          return function (value1) {
              return new Failure(value0, value1);
          };
      };
      return Failure;
  })();
  var LIST = (function () {
      function LIST(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      LIST.create = function (value0) {
          return function (value1) {
              return new LIST(value0, value1);
          };
      };
      return LIST;
  })();
  var ATOM = (function () {
      function ATOM(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ATOM.create = function (value0) {
          return function (value1) {
              return new ATOM(value0, value1);
          };
      };
      return ATOM;
  })();
  var Component = function (x) {
      return x;
  };
  var Name = (function () {
      function Name(value0) {
          this.value0 = value0;
      };
      Name.create = function (value0) {
          return new Name(value0);
      };
      return Name;
  })();
  var Str = (function () {
      function Str(value0) {
          this.value0 = value0;
      };
      Str.create = function (value0) {
          return new Str(value0);
      };
      return Str;
  })();
  var Catch = (function () {
      function Catch(value0) {
          this.value0 = value0;
      };
      Catch.create = function (value0) {
          return new Catch(value0);
      };
      return Catch;
  })();
  var showComponent = new Prelude.Show(function (_5) {
      var f = Prelude["<$>"](Data_Maybe.functorMaybe)(function (_4) {
          return "f()";
      })(_5.autocomplete);
      return "Component {" + (_5.name + ("," + (Prelude.show(Prelude.showArray(Prelude.showString))(_5.signature) + ("," + (Prelude.show(Data_Maybe.showMaybe(Prelude.showString))(f) + "}")))));
  });
  var genericPos = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.Pos" && $dollarx.value1.length === 2)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Pos.create))(Data_Generic.fromSpine(Data_Generic.genericInt)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericInt)($dollarx.value1[1](Prelude.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Language.Verne.Types.Pos", [ {
          sigConstructor: "Language.Verne.Types.Pos", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
          }, function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function ($dollarx) {
      return new Data_Generic.SProd("Language.Verne.Types.Pos", [ function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericInt)($dollarx.value0);
      }, function ($dollarq) {
          return Data_Generic.toSpine(Data_Generic.genericInt)($dollarx.value1);
      } ]);
  });
  var showPos = new Prelude.Show(Data_Generic.gShow(genericPos));
  var genericParseResult = function (__dict_Generic_6) {
      return new Data_Generic.Generic(function ($dollarx) {
          if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.Success" && $dollarx.value1.length === 1)) {
              return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Success.create))(Data_Generic.fromSpine(__dict_Generic_6)($dollarx.value1[0](Prelude.unit)));
          };
          if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.Partial" && $dollarx.value1.length === 1)) {
              return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Partial.create))(Data_Generic.fromSpine(__dict_Generic_6)($dollarx.value1[0](Prelude.unit)));
          };
          if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.Failure" && $dollarx.value1.length === 2)) {
              return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Failure.create))(Data_Generic.fromSpine(Data_Generic.genericInt)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[1](Prelude.unit)));
          };
          return Data_Maybe.Nothing.value;
      }, function ($dollarq) {
          return new Data_Generic.SigProd("Language.Verne.Types.ParseResult", [ {
              sigConstructor: "Language.Verne.Types.Success", 
              sigValues: [ function ($dollarq_1) {
                  return Data_Generic.toSignature(__dict_Generic_6)(Data_Generic.anyProxy);
              } ]
          }, {
              sigConstructor: "Language.Verne.Types.Partial", 
              sigValues: [ function ($dollarq_1) {
                  return Data_Generic.toSignature(__dict_Generic_6)(Data_Generic.anyProxy);
              } ]
          }, {
              sigConstructor: "Language.Verne.Types.Failure", 
              sigValues: [ function ($dollarq_1) {
                  return Data_Generic.toSignature(Data_Generic.genericInt)(Data_Generic.anyProxy);
              }, function ($dollarq_1) {
                  return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
              } ]
          } ]);
      }, function ($dollarx) {
          if ($dollarx instanceof Success) {
              return new Data_Generic.SProd("Language.Verne.Types.Success", [ function ($dollarq) {
                  return Data_Generic.toSpine(__dict_Generic_6)($dollarx.value0);
              } ]);
          };
          if ($dollarx instanceof Partial) {
              return new Data_Generic.SProd("Language.Verne.Types.Partial", [ function ($dollarq) {
                  return Data_Generic.toSpine(__dict_Generic_6)($dollarx.value0);
              } ]);
          };
          if ($dollarx instanceof Failure) {
              return new Data_Generic.SProd("Language.Verne.Types.Failure", [ function ($dollarq) {
                  return Data_Generic.toSpine(Data_Generic.genericInt)($dollarx.value0);
              }, function ($dollarq) {
                  return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value1);
              } ]);
          };
          throw new Error("Failed pattern match at Language.Verne.Types line 56, column 1 - line 57, column 1: " + [ $dollarx.constructor.name ]);
      });
  };
  var showParseResult = function (__dict_Show_0) {
      return function (__dict_Generic_1) {
          return new Prelude.Show(Data_Generic.gShow(genericParseResult(__dict_Generic_1)));
      };
  };
  var genericLISP = function (__dict_Generic_7) {
      return function (__dict_Generic_8) {
          return new Data_Generic.Generic(function ($dollarx) {
              if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.LIST" && $dollarx.value1.length === 2)) {
                  return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(LIST.create))(Data_Generic.fromSpine(__dict_Generic_7)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(Data_Generic.genericArray(genericLISP(__dict_Generic_7)(__dict_Generic_8)))($dollarx.value1[1](Prelude.unit)));
              };
              if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.ATOM" && $dollarx.value1.length === 2)) {
                  return Prelude.apply(Data_Maybe.applyMaybe)(Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(ATOM.create))(Data_Generic.fromSpine(__dict_Generic_7)($dollarx.value1[0](Prelude.unit))))(Data_Generic.fromSpine(__dict_Generic_8)($dollarx.value1[1](Prelude.unit)));
              };
              return Data_Maybe.Nothing.value;
          }, function ($dollarq) {
              return new Data_Generic.SigProd("Language.Verne.Types.LISP", [ {
                  sigConstructor: "Language.Verne.Types.LIST", 
                  sigValues: [ function ($dollarq_1) {
                      return Data_Generic.toSignature(__dict_Generic_8)(Data_Generic.anyProxy);
                  }, function ($dollarq_1) {
                      return Data_Generic.toSignature(Data_Generic.genericArray(genericLISP(__dict_Generic_8)(__dict_Generic_7)))(Data_Generic.anyProxy);
                  } ]
              }, {
                  sigConstructor: "Language.Verne.Types.ATOM", 
                  sigValues: [ function ($dollarq_1) {
                      return Data_Generic.toSignature(__dict_Generic_8)(Data_Generic.anyProxy);
                  }, function ($dollarq_1) {
                      return Data_Generic.toSignature(__dict_Generic_7)(Data_Generic.anyProxy);
                  } ]
              } ]);
          }, function ($dollarx) {
              if ($dollarx instanceof LIST) {
                  return new Data_Generic.SProd("Language.Verne.Types.LIST", [ function ($dollarq) {
                      return Data_Generic.toSpine(__dict_Generic_7)($dollarx.value0);
                  }, function ($dollarq) {
                      return Data_Generic.toSpine(Data_Generic.genericArray(genericLISP(__dict_Generic_7)(__dict_Generic_8)))($dollarx.value1);
                  } ]);
              };
              if ($dollarx instanceof ATOM) {
                  return new Data_Generic.SProd("Language.Verne.Types.ATOM", [ function ($dollarq) {
                      return Data_Generic.toSpine(__dict_Generic_7)($dollarx.value0);
                  }, function ($dollarq) {
                      return Data_Generic.toSpine(__dict_Generic_8)($dollarx.value1);
                  } ]);
              };
              throw new Error("Failed pattern match: " + [ $dollarx.constructor.name ]);
          });
      };
  };
  var showLISP = function (__dict_Show_2) {
      return function (__dict_Show_3) {
          return function (__dict_Generic_4) {
              return function (__dict_Generic_5) {
                  return new Prelude.Show(Data_Generic.gShow(genericLISP(__dict_Generic_4)(__dict_Generic_5)));
              };
          };
      };
  };
  var genericAtom = new Data_Generic.Generic(function ($dollarx) {
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.Name" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Name.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.Str" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Str.create))(Data_Generic.fromSpine(Data_Generic.genericString)($dollarx.value1[0](Prelude.unit)));
      };
      if ($dollarx instanceof Data_Generic.SProd && ($dollarx.value0 === "Language.Verne.Types.Catch" && $dollarx.value1.length === 1)) {
          return Prelude.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Catch.create))(Data_Generic.fromSpine(Text_Parsing_StringParser.genericParseError)($dollarx.value1[0](Prelude.unit)));
      };
      return Data_Maybe.Nothing.value;
  }, function ($dollarq) {
      return new Data_Generic.SigProd("Language.Verne.Types.Atom", [ {
          sigConstructor: "Language.Verne.Types.Name", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Language.Verne.Types.Str", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
          } ]
      }, {
          sigConstructor: "Language.Verne.Types.Catch", 
          sigValues: [ function ($dollarq_1) {
              return Data_Generic.toSignature(Text_Parsing_StringParser.genericParseError)(Data_Generic.anyProxy);
          } ]
      } ]);
  }, function ($dollarx) {
      if ($dollarx instanceof Name) {
          return new Data_Generic.SProd("Language.Verne.Types.Name", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof Str) {
          return new Data_Generic.SProd("Language.Verne.Types.Str", [ function ($dollarq) {
              return Data_Generic.toSpine(Data_Generic.genericString)($dollarx.value0);
          } ]);
      };
      if ($dollarx instanceof Catch) {
          return new Data_Generic.SProd("Language.Verne.Types.Catch", [ function ($dollarq) {
              return Data_Generic.toSpine(Text_Parsing_StringParser.genericParseError)($dollarx.value0);
          } ]);
      };
      throw new Error("Failed pattern match at Language.Verne.Types line 50, column 1 - line 51, column 1: " + [ $dollarx.constructor.name ]);
  });
  var showAtom = new Prelude.Show(Data_Generic.gShow(genericAtom));
  var eqPos = new Prelude.Eq(Data_Generic.gEq(genericPos));
  var eqParseResult = function (__dict_Eq_9) {
      return function (__dict_Generic_10) {
          return new Prelude.Eq(Data_Generic.gEq(genericParseResult(__dict_Generic_10)));
      };
  };
  var eqLISP = function (__dict_Eq_11) {
      return function (__dict_Eq_12) {
          return function (__dict_Generic_13) {
              return function (__dict_Generic_14) {
                  return new Prelude.Eq(Data_Generic.gEq(genericLISP(__dict_Generic_13)(__dict_Generic_14)));
              };
          };
      };
  };
  var eqComponent = new Prelude.Eq(function (_6) {
      return function (_7) {
          return Prelude["=="](Prelude.eqString)(_6.name)(_7.name) && (Prelude["=="](Prelude.eqArray(Prelude.eqString))(_6.signature)(_7.signature) && (Language_Verne_Utils.isSame(_6.autocomplete)(_7.autocomplete) && Language_Verne_Utils.isSame(_6.exec)(_7.exec)));
      };
  });
  var eqAtom = new Prelude.Eq(Data_Generic.gEq(genericAtom));
  var componentIsForeign = new Data_Foreign_Class.IsForeign(function (fo) {
      return Prelude["<$>"](Data_Either.functorEither)(Component)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (_0) {
          return function (_1) {
              return function (_2) {
                  return function (_3) {
                      return {
                          name: _0, 
                          signature: _1, 
                          autocomplete: _2, 
                          exec: _3
                      };
                  };
              };
          };
      })(Data_Foreign_Class.readProp(Data_Foreign_Class.stringIsForeign)(Data_Foreign_Index.indexString)("name")(fo)))(Data_Foreign_Class.readProp(Data_Foreign_Class.arrayIsForeign(Data_Foreign_Class.stringIsForeign))(Data_Foreign_Index.indexString)("signature")(fo)))(Prelude["<$>"](Data_Either.functorEither)(Data_Foreign_NullOrUndefined.runNullOrUndefined)(Data_Foreign_Class.readProp(Data_Foreign_Class.nullOrUndefinedIsForeign(Data_Foreign_Class.foreignIsForeign))(Data_Foreign_Index.indexString)("autocomplete")(fo))))(Data_Foreign_Class.readProp(Data_Foreign_Class.foreignIsForeign)(Data_Foreign_Index.indexString)("exec")(fo)));
  });
  exports["Pos"] = Pos;
  exports["Success"] = Success;
  exports["Partial"] = Partial;
  exports["Failure"] = Failure;
  exports["Component"] = Component;
  exports["Name"] = Name;
  exports["Str"] = Str;
  exports["Catch"] = Catch;
  exports["LIST"] = LIST;
  exports["ATOM"] = ATOM;
  exports["genericLISP"] = genericLISP;
  exports["eqLISP"] = eqLISP;
  exports["showLISP"] = showLISP;
  exports["genericPos"] = genericPos;
  exports["eqPos"] = eqPos;
  exports["showPos"] = showPos;
  exports["genericAtom"] = genericAtom;
  exports["eqAtom"] = eqAtom;
  exports["showAtom"] = showAtom;
  exports["genericParseResult"] = genericParseResult;
  exports["eqParseResult"] = eqParseResult;
  exports["showParseResult"] = showParseResult;
  exports["componentIsForeign"] = componentIsForeign;
  exports["showComponent"] = showComponent;
  exports["eqComponent"] = eqComponent;;
 
})(PS["Language.Verne.Types"] = PS["Language.Verne.Types"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Map = PS["Data.Map"];
  var Language_Verne_Types = PS["Language.Verne.Types"];     
  var Namespace = (function () {
      function Namespace(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Namespace.create = function (value0) {
          return function (value1) {
              return new Namespace(value0, value1);
          };
      };
      return Namespace;
  })();
  var empty = new Namespace(Data_Map.empty, Data_Map.empty);
  var componentsByTypeHead = function (typ) {
      return function (_1) {
          return Data_Maybe.maybe([  ])(Prelude.id(Prelude.categoryFn))(Data_Map.lookup(Prelude.ordString)(typ)(_1.value1));
      };
  };
  var componentByName = function (ident) {
      return function (_0) {
          return Data_Map.lookup(Prelude.ordString)(ident)(_0.value0);
      };
  };
  var addComponent$prime = function (_2) {
      return function (_3) {
          var _14 = Data_Map.member(Prelude.ordString)(_2.name)(_3.value0);
          if (_14) {
              return new Data_Either.Left("Already registered");
          };
          if (!_14) {
              var addition = Data_Map.singleton(Data_Array_Unsafe.head(_2.signature))([ _2 ]);
              var union = Data_Map.unionWith(Prelude.ordString)(Prelude["++"](Prelude.semigroupArray))(addition)(_3.value1);
              return new Data_Either.Right(new Namespace(Data_Map.insert(Prelude.ordString)(_2.name)(_2)(_3.value0), union));
          };
          throw new Error("Failed pattern match at Language.Verne.Namespace line 39, column 1 - line 40, column 1: " + [ _14.constructor.name ]);
      };
  };
  var addComponent = function (f) {
      return function (ns) {
          var _17 = Data_Foreign_Class.read(Language_Verne_Types.componentIsForeign)(f);
          if (_17 instanceof Data_Either.Left) {
              return new Data_Either.Left("Error importing component: " + Prelude.show(Data_Foreign.showForeignError)(_17.value0));
          };
          if (_17 instanceof Data_Either.Right) {
              return addComponent$prime(_17.value0)(ns);
          };
          throw new Error("Failed pattern match at Language.Verne.Namespace line 32, column 1 - line 33, column 1: " + [ _17.constructor.name ]);
      };
  };
  exports["Namespace"] = Namespace;
  exports["addComponent'"] = addComponent$prime;
  exports["addComponent"] = addComponent;
  exports["componentsByTypeHead"] = componentsByTypeHead;
  exports["componentByName"] = componentByName;
  exports["empty"] = empty;;
 
})(PS["Language.Verne.Namespace"] = PS["Language.Verne.Namespace"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Array = PS["Data.Array"];
  var Data_Array_Unsafe = PS["Data.Array.Unsafe"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Language_Verne_Namespace = PS["Language.Verne.Namespace"];
  var Language_Verne_Types = PS["Language.Verne.Types"];
  var Language_Verne_Utils = PS["Language.Verne.Utils"];     
  var LIST_T = (function () {
      function LIST_T(value0) {
          this.value0 = value0;
      };
      LIST_T.create = function (value0) {
          return new LIST_T(value0);
      };
      return LIST_T;
  })();
  var ATOM_T = (function () {
      function ATOM_T(value0) {
          this.value0 = value0;
      };
      ATOM_T.create = function (value0) {
          return new ATOM_T(value0);
      };
      return ATOM_T;
  })();
  var typeLisp = function (ns) {
      return function (typ$prime) {
          return function (lisp) {
              var mkComponant = function (name) {
                  return function (sig) {
                      return function (value) {
                          return {
                              name: name, 
                              signature: sig, 
                              autocomplete: Data_Maybe.Nothing.value, 
                              exec: Data_Foreign.toForeign(function (_0) {
                                  return value;
                              })
                          };
                      };
                  };
              };
              var strConstruct = function (typ) {
                  return function (str) {
                      return Prelude[">>="](Data_Maybe.bindMaybe)(Language_Verne_Namespace.componentByName(typ)(ns))(function (_1) {
                          var _8 = Prelude["=="](Prelude.eqArray(Prelude.eqString))(_1.signature)([ typ, "String" ]);
                          if (_8) {
                              return new Data_Maybe.Just(mkComponant("")([ typ ])(str));
                          };
                          if (!_8) {
                              return Data_Maybe.Nothing.value;
                          };
                          throw new Error("Failed pattern match at Language.Verne.TypeChecker line 31, column 1 - line 32, column 1: " + [ _8.constructor.name ]);
                      });
                  };
              };
              var errExpected = function (typ) {
                  return function (t) {
                      return Data_Either.Left.create("Couldn't match expected type " + (typ + (" with " + t)));
                  };
              };
              var errArity = function (name) {
                  return "Wrong number of arguments for " + name;
              };
              var anno = function (typ) {
                  return function (_2) {
                      if (_2 instanceof Language_Verne_Types.LIST) {
                          var _11 = Data_Array.uncons(_2.value1);
                          if (_11 instanceof Data_Maybe.Nothing) {
                              return new LIST_T({
                                  typ: typ, 
                                  pos: _2.value0, 
                                  merr: new Data_Maybe.Just("Empty expression not allowed"), 
                                  arr: [  ]
                              });
                          };
                          if (_11 instanceof Data_Maybe.Just) {
                              var typePadding = Data_Array.replicate(Data_Array.length(_11.value0.tail))("");
                              var atom = anno(typ)(_11.value0.head);
                              if (atom instanceof ATOM_T && atom.value0.ecomp instanceof Data_Either.Left) {
                                  return new LIST_T({
                                      typ: typ, 
                                      pos: _2.value0, 
                                      merr: new Data_Maybe.Just(atom.value0.ecomp.value0), 
                                      arr: Data_Array[":"](atom)(Data_Array.zipWith(anno)(typePadding)(_11.value0.tail))
                                  });
                              };
                              if (atom instanceof ATOM_T && atom.value0.ecomp instanceof Data_Either.Right) {
                                  var _16 = Data_Array.length(atom.value0.ecomp.value0.signature) - 1 === Data_Array.length(_11.value0.tail);
                                  if (_16) {
                                      var sig = Data_Array_Unsafe.tail(atom.value0.ecomp.value0.signature);
                                      return new LIST_T({
                                          typ: typ, 
                                          pos: _2.value0, 
                                          merr: Data_Maybe.Nothing.value, 
                                          arr: Data_Array[":"](atom)(Data_Array.zipWith(anno)(sig)(_11.value0.tail))
                                      });
                                  };
                                  if (!_16) {
                                      var sig = Data_Array_Unsafe.tail(Prelude["++"](Prelude.semigroupArray)(atom.value0.ecomp.value0.signature)(typePadding));
                                      var merr = new Data_Maybe.Just(errArity(atom.value0.ecomp.value0.name));
                                      return new LIST_T({
                                          typ: typ, 
                                          pos: _2.value0, 
                                          merr: merr, 
                                          arr: Data_Array[":"](atom)(Data_Array.zipWith(anno)(sig)(_11.value0.tail))
                                      });
                                  };
                                  throw new Error("Failed pattern match at Language.Verne.TypeChecker line 31, column 1 - line 32, column 1: " + [ _16.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Language.Verne.TypeChecker line 31, column 1 - line 32, column 1: " + [ atom.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Language.Verne.TypeChecker line 31, column 1 - line 32, column 1: " + [ _11.constructor.name ]);
                      };
                      if (_2 instanceof Language_Verne_Types.ATOM && _2.value1 instanceof Language_Verne_Types.Name) {
                          var ecomp = (function () {
                              var _25 = Language_Verne_Namespace.componentByName(_2.value1.value0)(ns);
                              if (_25 instanceof Data_Maybe.Nothing) {
                                  return new Data_Either.Left("Not defined: " + _2.value1.value0);
                              };
                              if (_25 instanceof Data_Maybe.Just) {
                                  var _26 = Data_Array.head(_25.value0.signature);
                                  if (_26 instanceof Data_Maybe.Just) {
                                      var _27 = Prelude["=="](Prelude.eqString)(_26.value0)(typ);
                                      if (_27) {
                                          return Data_Either.Right.create(_25.value0);
                                      };
                                      if (!_27) {
                                          return errExpected(typ)(_26.value0);
                                      };
                                      throw new Error("Failed pattern match at Language.Verne.TypeChecker line 52, column 13 - line 59, column 9: " + [ _27.constructor.name ]);
                                  };
                                  if (_26 instanceof Data_Maybe.Nothing) {
                                      return new Data_Either.Left("Bad component signature");
                                  };
                                  throw new Error("Failed pattern match at Language.Verne.TypeChecker line 52, column 13 - line 59, column 9: " + [ _26.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Language.Verne.TypeChecker line 52, column 13 - line 59, column 9: " + [ _25.constructor.name ]);
                          })();
                          return new ATOM_T({
                              typ: typ, 
                              pos: _2.value0, 
                              atom: _2.value1, 
                              ecomp: ecomp
                          });
                      };
                      if (_2 instanceof Language_Verne_Types.ATOM && _2.value1 instanceof Language_Verne_Types.Str) {
                          var ecomp = (function () {
                              var _33 = Prelude["=="](Prelude.eqString)(typ)("String");
                              if (_33) {
                                  return Data_Either.Right.create(mkComponant("")([ "String" ])(_2.value1.value0));
                              };
                              if (!_33) {
                                  var _34 = strConstruct(typ)(_2.value1.value0);
                                  if (_34 instanceof Data_Maybe.Nothing) {
                                      return errExpected(typ)("String");
                                  };
                                  if (_34 instanceof Data_Maybe.Just) {
                                      return new Data_Either.Right(_34.value0);
                                  };
                                  throw new Error("Failed pattern match: " + [ _34.constructor.name ]);
                              };
                              throw new Error("Failed pattern match at Language.Verne.TypeChecker line 63, column 13 - line 68, column 10: " + [ _33.constructor.name ]);
                          })();
                          return new ATOM_T({
                              typ: typ, 
                              pos: _2.value0, 
                              atom: _2.value1, 
                              ecomp: ecomp
                          });
                      };
                      throw new Error("Failed pattern match at Language.Verne.TypeChecker line 31, column 1 - line 32, column 1: " + [ typ.constructor.name, _2.constructor.name ]);
                  };
              };
              return anno(typ$prime)(lisp);
          };
      };
  };
  var showLISP_T = function (__dict_Show_0) {
      return new Prelude.Show(function (_5) {
          if (_5 instanceof LIST_T) {
              return "LIST_T {" + (_5.value0.typ + ("," + (Prelude.show(Language_Verne_Types.showPos)(_5.value0.pos) + ("," + (Prelude.show(Data_Maybe.showMaybe(Prelude.showString))(_5.value0.merr) + ("," + (Prelude.show(Prelude.showArray(showLISP_T(__dict_Show_0)))(_5.value0.arr) + "}")))))));
          };
          if (_5 instanceof ATOM_T) {
              return "ATOM_T {" + (_5.value0.typ + ("," + (Prelude.show(Language_Verne_Types.showPos)(_5.value0.pos) + ("," + (Prelude.show(__dict_Show_0)(_5.value0.atom) + ("," + (Prelude.show(Data_Either.showEither(Prelude.showString)(Language_Verne_Types.showComponent))(_5.value0.ecomp) + "}")))))));
          };
          throw new Error("Failed pattern match: " + [ _5.constructor.name ]);
      });
  };
  var eqLISP_T = function (__dict_Eq_1) {
      return new Prelude.Eq(function (_3) {
          return function (_4) {
              if (_3 instanceof LIST_T && _4 instanceof LIST_T) {
                  return Prelude["=="](Prelude.eqString)(_3.value0.typ)(_4.value0.typ) && (Prelude["=="](Language_Verne_Types.eqPos)(_3.value0.pos)(_4.value0.pos) && (Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(_3.value0.merr)(_4.value0.merr) && Prelude["=="](Prelude.eqArray(eqLISP_T(__dict_Eq_1)))(_3.value0.arr)(_4.value0.arr)));
              };
              if (_3 instanceof ATOM_T && _4 instanceof ATOM_T) {
                  return Prelude["=="](Prelude.eqString)(_3.value0.typ)(_4.value0.typ) && (Prelude["=="](Language_Verne_Types.eqPos)(_3.value0.pos)(_4.value0.pos) && (Prelude["=="](__dict_Eq_1)(_3.value0.atom)(_4.value0.atom) && Prelude["=="](Data_Either.eqEither(Prelude.eqString)(Language_Verne_Types.eqComponent))(_3.value0.ecomp)(_4.value0.ecomp)));
              };
              if (_3 instanceof LIST_T && _4 instanceof ATOM_T) {
                  return false;
              };
              if (_3 instanceof ATOM_T && _4 instanceof LIST_T) {
                  return false;
              };
              throw new Error("Failed pattern match: " + [ _3.constructor.name, _4.constructor.name ]);
          };
      });
  };
  exports["LIST_T"] = LIST_T;
  exports["ATOM_T"] = ATOM_T;
  exports["typeLisp"] = typeLisp;
  exports["eqLISP_T"] = eqLISP_T;
  exports["showLISP_T"] = showLISP_T;;
 
})(PS["Language.Verne.TypeChecker"] = PS["Language.Verne.TypeChecker"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Except = PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Identity = PS["Data.Identity"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Traversable = PS["Data.Traversable"];
  var Language_Verne_Namespace = PS["Language.Verne.Namespace"];
  var Language_Verne_TypeChecker = PS["Language.Verne.TypeChecker"];
  var Language_Verne_Types = PS["Language.Verne.Types"];
  var Prelude = PS["Prelude"];
  var Debug_Trace = PS["Debug.Trace"];     
  var NameCompletions = (function () {
      function NameCompletions(value0) {
          this.value0 = value0;
      };
      NameCompletions.create = function (value0) {
          return new NameCompletions(value0);
      };
      return NameCompletions;
  })();
  var ComponentAutocomplete = (function () {
      function ComponentAutocomplete(value0) {
          this.value0 = value0;
      };
      ComponentAutocomplete.create = function (value0) {
          return new ComponentAutocomplete(value0);
      };
      return ComponentAutocomplete;
  })();
  var ShowError = (function () {
      function ShowError(value0) {
          this.value0 = value0;
      };
      ShowError.create = function (value0) {
          return new ShowError(value0);
      };
      return ShowError;
  })();
  var complete = function (_42) {
      return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))(Control_Monad_Except.except(Data_Either.Left.create(_42)));
  };
  var componentAutocomplete = function (_2) {
      return Data_Maybe.maybe(Prelude.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.applicativeIdentity)))(Prelude.unit))(function (_43) {
          return complete(ComponentAutocomplete.create(_43));
      })(_2.autocomplete);
  };
  var nameCompletions = function (name) {
      return function (typ) {
          return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))))(function (_0) {
              var lname = Data_String.toLower(name);
              var hasPrefix = function (_4) {
                  return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqInt))(Data_String.indexOf(lname)(Data_String.toLower(_4.name)))(new Data_Maybe.Just(0));
              };
              var comps = Language_Verne_Namespace.componentsByTypeHead(typ)(_0.ns);
              var matches = Data_Array.filter(hasPrefix)(comps);
              return complete(new NameCompletions(matches));
          });
      };
  };
  var completeNextArg = function (arr) {
      var offset = Data_Array.length(arr);
      var _9 = Data_Array.head(arr);
      if (_9 instanceof Data_Maybe.Just && (_9.value0 instanceof Language_Verne_TypeChecker.ATOM_T && _9.value0.value0.ecomp instanceof Data_Either.Right)) {
          var _10 = Data_Array["!!"](_9.value0.value0.ecomp.value0.signature)(offset);
          if (_10 instanceof Data_Maybe.Just) {
              return nameCompletions("")(_10.value0);
          };
          if (_10 instanceof Data_Maybe.Nothing) {
              return Prelude.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.applicativeIdentity)))(Prelude.unit);
          };
          throw new Error("Failed pattern match at Language.Verne.Autocomplete line 74, column 1 - line 75, column 1: " + [ _10.constructor.name ]);
      };
      if (_9 instanceof Data_Maybe.Nothing) {
          return Prelude.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.applicativeIdentity)))(Prelude.unit);
      };
      throw new Error("Failed pattern match at Language.Verne.Autocomplete line 74, column 1 - line 75, column 1: " + [ _9.constructor.name ]);
  };
  var getCompletion$prime$prime = function (atom) {
      if (atom instanceof Language_Verne_TypeChecker.LIST_T) {
          return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Monad.when(Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Data_Array.length(atom.value0.arr) === 0)(nameCompletions("")(atom.value0.typ)))(function () {
              return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Data_Traversable.sequence(Data_Traversable.traversableArray)(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.applicativeIdentity)))(Prelude["<$>"](Prelude.functorArray)(getCompletion$prime)(atom.value0.arr)))(function () {
                  return completeNextArg(atom.value0.arr);
              });
          });
      };
      if (atom instanceof Language_Verne_TypeChecker.ATOM_T && atom.value0.ecomp instanceof Data_Either.Right) {
          return componentAutocomplete(atom.value0.ecomp.value0);
      };
      if (atom instanceof Language_Verne_TypeChecker.ATOM_T && atom.value0.ecomp instanceof Data_Either.Left) {
          return Prelude.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))((function () {
              if (atom.value0.atom instanceof Language_Verne_Types.Name) {
                  return nameCompletions(atom.value0.atom.value0)(atom.value0.typ);
              };
              return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.applicativeIdentity)))(Prelude.unit);
          })())(function () {
              return complete(new ShowError(atom.value0.ecomp.value0));
          });
      };
      throw new Error("Failed pattern match: " + [ atom.constructor.name ]);
  };
  var getCompletion$prime = function (lisp) {
      var getPos = function (_3) {
          if (_3 instanceof Language_Verne_TypeChecker.LIST_T) {
              return _3.value0.pos;
          };
          if (_3 instanceof Language_Verne_TypeChecker.ATOM_T) {
              return _3.value0.pos;
          };
          throw new Error("Failed pattern match at Language.Verne.Autocomplete line 46, column 5 - line 47, column 5: " + [ _3.constructor.name ]);
      };
      return Prelude[">>="](Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity))))(function (r) {
          var _37 = getPos(lisp);
          var _38 = r.caret >= _37.value0 && r.caret <= _37.value1;
          if (_38) {
              return getCompletion$prime$prime(lisp);
          };
          if (!_38) {
              return Prelude["return"](Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.applicativeIdentity)))(Prelude.unit);
          };
          throw new Error("Failed pattern match: " + [ _38.constructor.name ]);
      });
  };
  var runAutocomplete = function (ns) {
      return function (caret) {
          return function (lisp) {
              return Data_Either.either(Data_Maybe.Just.create)(function (_1) {
                  return Data_Maybe.Nothing.value;
              })(Control_Monad_Except.runExcept(Control_Monad_Reader_Trans.runReaderT(getCompletion$prime(lisp))({
                  ns: ns, 
                  caret: caret
              })));
          };
      };
  };
  exports["NameCompletions"] = NameCompletions;
  exports["ComponentAutocomplete"] = ComponentAutocomplete;
  exports["ShowError"] = ShowError;
  exports["runAutocomplete"] = runAutocomplete;;
 
})(PS["Language.Verne.Autocomplete"] = PS["Language.Verne.Autocomplete"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_List = PS["Data.List"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];     
  var $less$qmark$greater = function (p) {
      return function (msg) {
          return new Text_Parsing_StringParser.Parser(function (s) {
              return function (fc) {
                  return function (sc) {
                      var fc1 = function (pos) {
                          return function (err) {
                              return fc(pos)((function () {
                                  var _19 = Prelude["=="](Text_Parsing_StringParser.eqParseError)(err)(Text_Parsing_StringParser.EndOfInput.value);
                                  if (_19) {
                                      return err;
                                  };
                                  if (!_19) {
                                      return new Text_Parsing_StringParser.ParseError(msg);
                                  };
                                  throw new Error("Failed pattern match at Text.Parsing.StringParser.Combinators line 34, column 7 - line 35, column 3: " + [ _19.constructor.name ]);
                              })());
                          };
                      };
                      return Text_Parsing_StringParser.unParser(p)(s)(fc1)(sc);
                  };
              };
          });
      };
  };
  var many1 = function (p) {
      return Prelude.bind(Text_Parsing_StringParser.bindParser)(p)(function (_1) {
          return Prelude.bind(Text_Parsing_StringParser.bindParser)(many(p))(function (_0) {
              return Prelude["return"](Text_Parsing_StringParser.applicativeParser)(new Data_List.Cons(_1, _0));
          });
      });
  };
  var many = function (p) {
      return Control_Alt["<|>"](Text_Parsing_StringParser.altParser)(many1(p))(Prelude["return"](Text_Parsing_StringParser.applicativeParser)(Data_List.Nil.value));
  };
  var fix = function (f) {
      return new Text_Parsing_StringParser.Parser(function (s) {
          return function (fc) {
              return function (sc) {
                  return Text_Parsing_StringParser.unParser(f(fix(f)))(s)(fc)(sc);
              };
          };
      });
  };
  exports["fix"] = fix;
  exports["<?>"] = $less$qmark$greater;
  exports["many1"] = many1;
  exports["many"] = many;;
 
})(PS["Text.Parsing.StringParser.Combinators"] = PS["Text.Parsing.StringParser.Combinators"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_Char = PS["Data.Char"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Array = PS["Data.Array"];
  var Control_Alt = PS["Control.Alt"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Data_List = PS["Data.List"];
  var Data_Monoid = PS["Data.Monoid"];
  var eof = new Text_Parsing_StringParser.Parser(function (s) {
      return function (fc) {
          return function (sc) {
              if (s.pos < Data_String.length(s.str)) {
                  return fc(s.pos)(Text_Parsing_StringParser.EndOfInput.value);
              };
              return sc(Prelude.unit)(s);
          };
      };
  });
  var anyChar = new Text_Parsing_StringParser.Parser(function (s) {
      return function (fc) {
          return function (sc) {
              var _16 = Data_String.charAt(s.pos)(s.str);
              if (_16 instanceof Data_Maybe.Just) {
                  return sc(_16.value0)({
                      str: s.str, 
                      pos: s.pos + 1 | 0
                  });
              };
              if (_16 instanceof Data_Maybe.Nothing) {
                  return fc(s.pos)(Text_Parsing_StringParser.EndOfInput.value);
              };
              throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 39, column 1 - line 40, column 1: " + [ _16.constructor.name ]);
          };
      };
  }); 
  var lowerCaseChar = Prelude.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (_4) {
      var _23 = Data_Foldable.elem(Data_Foldable.foldableArray)(Prelude.eqInt)(Data_Char.toCharCode(_4))(Data_Array[".."](97)(122));
      if (_23) {
          return Prelude["return"](Text_Parsing_StringParser.applicativeParser)(_4);
      };
      if (!_23) {
          return Text_Parsing_StringParser.fail("Expected a lower case character but found '" + (Data_Char.toString(_4) + "'"));
      };
      throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 94, column 1 - line 95, column 1: " + [ _23.constructor.name ]);
  });
  var satisfy = function (f) {
      return Text_Parsing_StringParser["try"](Prelude.bind(Text_Parsing_StringParser.bindParser)(anyChar)(function (_2) {
          var _25 = f(_2);
          if (_25) {
              return Prelude["return"](Text_Parsing_StringParser.applicativeParser)(_2);
          };
          if (!_25) {
              return Text_Parsing_StringParser.fail("Character " + (Data_Char.toString(_2) + " did not satisfy predicate"));
          };
          throw new Error("Failed pattern match at Text.Parsing.StringParser.String line 64, column 1 - line 65, column 1: " + [ _25.constructor.name ]);
      }));
  };
  var $$char = function (c) {
      return Text_Parsing_StringParser_Combinators["<?>"](satisfy(function (_0) {
          return Prelude["=="](Prelude.eqChar)(_0)(c);
      }))("Could not match character " + Data_Char.toString(c));
  };
  var whiteSpace = Prelude.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(satisfy(function (c) {
      return Prelude["=="](Prelude.eqChar)(c)("\n") || (Prelude["=="](Prelude.eqChar)(c)("\r") || (Prelude["=="](Prelude.eqChar)(c)(" ") || Prelude["=="](Prelude.eqChar)(c)("\t")));
  })))(function (_3) {
      return Prelude["return"](Text_Parsing_StringParser.applicativeParser)(Data_Foldable.foldMap(Data_List.foldableList)(Data_Monoid.monoidString)(Data_Char.toString)(_3));
  });
  var skipSpaces = Prelude["void"](Text_Parsing_StringParser.functorParser)(whiteSpace);
  exports["lowerCaseChar"] = lowerCaseChar;
  exports["skipSpaces"] = skipSpaces;
  exports["whiteSpace"] = whiteSpace;
  exports["char"] = $$char;
  exports["satisfy"] = satisfy;
  exports["anyChar"] = anyChar;
  exports["eof"] = eof;;
 
})(PS["Text.Parsing.StringParser.String"] = PS["Text.Parsing.StringParser.String"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Array = PS["Data.Array"];
  var Data_List = PS["Data.List"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Text_Parsing_StringParser = PS["Text.Parsing.StringParser"];
  var Text_Parsing_StringParser_Combinators = PS["Text.Parsing.StringParser.Combinators"];
  var Text_Parsing_StringParser_String = PS["Text.Parsing.StringParser.String"];
  var Language_Verne_Types = PS["Language.Verne.Types"];
  var Data_Unfoldable = PS["Data.Unfoldable"];     
  var maxpos = 1000000;
  var getPos = new Text_Parsing_StringParser.Parser(function (_13) {
      return function (_12) {
          return function (sc) {
              return sc(_13.pos)(_13);
          };
      };
  });
  var parseStr = Prelude.bind(Text_Parsing_StringParser.bindParser)(getPos)(function (_8) {
      return Prelude.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String["char"]("\""))(function () {
          return Prelude.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(Text_Parsing_StringParser_String.satisfy(function (_48) {
              return !(function (_0) {
                  return Prelude["=="](Prelude.eqChar)(_0)("\"");
              })(_48);
          })))(function (_7) {
              return Prelude.bind(Text_Parsing_StringParser.bindParser)(Control_Alt["<|>"](Text_Parsing_StringParser.altParser)(Control_Apply["*>"](Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.eof)(Prelude.pure(Text_Parsing_StringParser.applicativeParser)(maxpos)))(Control_Apply["*>"](Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String["char"]("\""))(getPos)))(function (_6) {
                  return Prelude.pure(Text_Parsing_StringParser.applicativeParser)(new Language_Verne_Types.ATOM(new Language_Verne_Types.Pos(_8, _6), new Language_Verne_Types.Str(Data_String.fromCharArray(Data_List.fromList(Data_Unfoldable.unfoldableArray)(_7)))));
              });
          });
      });
  });
  var codePos = function (p) {
      return Prelude.bind(Text_Parsing_StringParser.bindParser)(getPos)(function (_11) {
          return Prelude.bind(Text_Parsing_StringParser.bindParser)(p)(function (_10) {
              return Prelude.bind(Text_Parsing_StringParser.bindParser)(getPos)(function (_9) {
                  return Prelude.pure(Text_Parsing_StringParser.applicativeParser)(_10(new Language_Verne_Types.Pos(_11, _9)));
              });
          });
      });
  };
  var parseName = (function () {
      var myAlphaNum = Text_Parsing_StringParser_String.satisfy(function (c) {
          return Prelude[">="](Prelude.ordChar)(c)("a") && Prelude["<="](Prelude.ordChar)(c)("z") || (Prelude[">="](Prelude.ordChar)(c)("A") && Prelude["<="](Prelude.ordChar)(c)("Z") || Prelude[">="](Prelude.ordChar)(c)("0") && Prelude["<="](Prelude.ordChar)(c)("9"));
      });
      return codePos(Prelude["<$>"](Text_Parsing_StringParser.functorParser)(Prelude.flip(Language_Verne_Types.ATOM.create))(Prelude.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_String.lowerCaseChar)(function (_5) {
          return Prelude.bind(Text_Parsing_StringParser.bindParser)(Text_Parsing_StringParser_Combinators.many(myAlphaNum))(function (_4) {
              return Prelude.pure(Text_Parsing_StringParser.applicativeParser)(Language_Verne_Types.Name.create(Data_String.fromCharArray(Data_List.fromList(Data_Unfoldable.unfoldableArray)(new Data_List.Cons(_5, _4)))));
          });
      })));
  })();
  var parseArgs = Text_Parsing_StringParser_Combinators.fix(function (_14) {
      return Prelude["<$>"](Text_Parsing_StringParser.functorParser)(Data_List.fromList(Data_Unfoldable.unfoldableArray))(Text_Parsing_StringParser_Combinators.many(Control_Apply["<*"](Text_Parsing_StringParser.applyParser)(parseArg)(Text_Parsing_StringParser_String.skipSpaces)));
  });
  var parseArg = (function () {
      var parseParens = Text_Parsing_StringParser_Combinators.fix(function (_15) {
          return Prelude.bind(Text_Parsing_StringParser.bindParser)(getPos)(function (_3) {
              return Prelude.bind(Text_Parsing_StringParser.bindParser)(Control_Apply["*>"](Text_Parsing_StringParser.applyParser)(Control_Apply["*>"](Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String["char"]("("))(Text_Parsing_StringParser_String.skipSpaces))(parseArgs))(function (_2) {
                  return Prelude.bind(Text_Parsing_StringParser.bindParser)(Control_Alt["<|>"](Text_Parsing_StringParser.altParser)(Control_Apply["*>"](Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.eof)(Prelude.pure(Text_Parsing_StringParser.applicativeParser)(maxpos)))(Control_Apply["*>"](Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String["char"](")"))(getPos)))(function (_1) {
                      return Prelude.pure(Text_Parsing_StringParser.applicativeParser)(new Language_Verne_Types.LIST(new Language_Verne_Types.Pos(_3, _1), _2));
                  });
              });
          });
      });
      var parseAtom = Control_Alt["<|>"](Text_Parsing_StringParser.altParser)(parseStr)(parseName);
      return Control_Alt["<|>"](Text_Parsing_StringParser.altParser)(parseAtom)(parseParens);
  })();
  var checkSuccess = function (a) {
      return function (_16) {
          var dive = function (__copy__18) {
              var _18 = __copy__18;
              tco: while (true) {
                  if (_18 instanceof Language_Verne_Types.LIST) {
                      var _36 = Data_Array.last(_18.value1);
                      if (_36 instanceof Data_Maybe.Nothing) {
                          return new Language_Verne_Types.Success(a);
                      };
                      if (_36 instanceof Data_Maybe.Just) {
                          _18 = _36.value0;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Language.Verne.Parser line 76, column 1 - line 77, column 1: " + [ _36.constructor.name ]);
                  };
                  if (_18 instanceof Language_Verne_Types.ATOM && _18.value1 instanceof Language_Verne_Types.Catch) {
                      return new Language_Verne_Types.Partial(a);
                  };
                  if (_18 instanceof Language_Verne_Types.ATOM) {
                      return new Language_Verne_Types.Success(a);
                  };
                  throw new Error("Failed pattern match at Language.Verne.Parser line 76, column 1 - line 77, column 1: " + [ _18.constructor.name ]);
              };
          };
          return dive(a);
      };
  };
  var parse = function (input) {
      var parseCode = Prelude["<*>"](Text_Parsing_StringParser.applyParser)(Prelude["<$>"](Text_Parsing_StringParser.functorParser)(Language_Verne_Types.LIST.create)(Prelude["<*>"](Text_Parsing_StringParser.applyParser)(Prelude["<$>"](Text_Parsing_StringParser.functorParser)(Language_Verne_Types.Pos.create)(getPos))(Prelude.pure(Text_Parsing_StringParser.applicativeParser)(maxpos))))(parseArgs);
      var onErr = function (pos) {
          return function (_17) {
              if (_17 instanceof Text_Parsing_StringParser.ParseError) {
                  return new Language_Verne_Types.Failure(pos, _17.value0);
              };
              if (_17 instanceof Text_Parsing_StringParser.EndOfInput) {
                  return new Language_Verne_Types.Failure(pos, "EndOfInput");
              };
              throw new Error("Failed pattern match at Language.Verne.Parser line 68, column 1 - line 69, column 1: " + [ pos.constructor.name, _17.constructor.name ]);
          };
      };
      return Text_Parsing_StringParser.unParser(parseCode)({
          str: input, 
          pos: 0
      })(onErr)(checkSuccess);
  };
  exports["parse"] = parse;;
 
})(PS["Language.Verne.Parser"] = PS["Language.Verne.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Language_Verne_Types = PS["Language.Verne.Types"];
  var Language_Verne_TypeChecker = PS["Language.Verne.TypeChecker"];
  var Prelude = PS["Prelude"];     
  var prepare = function (_0) {
      if (_0 instanceof Language_Verne_TypeChecker.LIST_T && _0.value0.merr instanceof Data_Maybe.Just) {
          return new Data_Either.Left({
              error: _0.value0.merr.value0, 
              pos: _0.value0.pos
          });
      };
      if (_0 instanceof Language_Verne_TypeChecker.LIST_T && _0.value0.merr instanceof Data_Maybe.Nothing) {
          var _6 = Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Prelude["<$>"](Prelude.functorArray)(prepare)(_0.value0.arr));
          if (_6 instanceof Data_Either.Right) {
              return new Data_Either.Right(Data_Foreign.toForeign({
                  expr: _6.value0
              }));
          };
          if (_6 instanceof Data_Either.Left) {
              return new Data_Either.Left(_6.value0);
          };
          throw new Error("Failed pattern match: " + [ _6.constructor.name ]);
      };
      if (_0 instanceof Language_Verne_TypeChecker.ATOM_T && _0.value0.ecomp instanceof Data_Either.Left) {
          return new Data_Either.Left({
              error: _0.value0.ecomp.value0, 
              pos: _0.value0.pos
          });
      };
      if (_0 instanceof Language_Verne_TypeChecker.ATOM_T && _0.value0.ecomp instanceof Data_Either.Right) {
          return new Data_Either.Right(Data_Foreign.toForeign({
              atom: _0.value0.ecomp.value0
          }));
      };
      throw new Error("Failed pattern match: " + [ _0.constructor.name ]);
  };
  exports["prepare"] = prepare;;
 
})(PS["Language.Verne.Runner"] = PS["Language.Verne.Runner"] || {});
(function(exports) {
  // Generated by psc version 0.7.6.1
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];     
  var main = Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
  exports["main"] = main;;
 
})(PS["Main"] = PS["Main"] || {});

PS["Main"].main();
module.exports = PS;
